<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>NiePlus博客</title>
  <subtitle>不经一番彻寒骨，怎得梅花扑鼻香！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-06-30T03:02:31.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Plus Nie</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo搭建</title>
    <link href="http://yoursite.com/2016/06/28/Hexo%E6%90%AD%E5%BB%BA/"/>
    <id>http://yoursite.com/2016/06/28/Hexo搭建/</id>
    <published>2016-06-28T09:11:04.000Z</published>
    <updated>2016-06-30T03:02:31.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Hexo&quot;&gt;&lt;a href=&quot;#Hexo&quot; class=&quot;headerlink&quot; title=&quot;Hexo&quot;&gt;&lt;/a&gt;Hexo&lt;/h2&gt;&lt;p&gt; Hexo是一种快速的、简单的、强大的、静态的博客框架，开发环境基于Node . js，支持MarkDown，支持Github部署。了解更多hexo请到官网地址：&lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo官网&lt;/a&gt; 。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;友情提示：很多大神都在用哦！&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;node.js（必须安装），下载安装地址到：&lt;a href=&quot;http://nodejs.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;nodejs官网&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;git（必须安装），mac下安装Xcode即可。&lt;/li&gt;
&lt;li&gt;github账号（必须申请），用于hexo服务管理部署。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;安装hexo&quot;&gt;&lt;a href=&quot;#安装hexo&quot; class=&quot;headerlink&quot; title=&quot;安装hexo&quot;&gt;&lt;/a&gt;安装hexo&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Hexo 安装，全局安装，加-g参数&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install -g hexo&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查看hexo版本&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo version&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用hexo创建项目&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo init nodejs-hexo&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1290061-cf754462a830effa.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;创建hexo项目（部分截图）.png&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;启动Hexo服务器&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; nodejs-hexo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1290061-8a9d164c90a4f3f8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;Paste_Image.png&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;浏览器打开地址&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;http://localhost:4000/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1290061-50afc8e47e3e1e7d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;默认的网页界面.png&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Hexo的使用&quot;&gt;&lt;a href=&quot;#Hexo的使用&quot; class=&quot;headerlink&quot; title=&quot;Hexo的使用&quot;&gt;&lt;/a&gt;Hexo的使用&lt;/h2&gt;&lt;h3 id=&quot;目录和文件&quot;&gt;&lt;a href=&quot;#目录和文件&quot; class=&quot;headerlink&quot; title=&quot;目录和文件&quot;&gt;&lt;/a&gt;目录和文件&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1290061-ed16e5a761138db1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;目录和文件.png&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;.idea 没啥用&lt;/li&gt;
&lt;li&gt;node_modules&lt;/li&gt;
&lt;li&gt;scaffolds 模板工具&lt;/li&gt;
&lt;li&gt;source 存放博客正文内容&lt;ul&gt;
&lt;li&gt;source/_drafts 草稿箱&lt;/li&gt;
&lt;li&gt;source/_posts 文件箱&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;themes 存放皮肤的目录&lt;ul&gt;
&lt;li&gt;themes/landscape 默认的皮肤&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;_config.yml 全局的配置文件&lt;/li&gt;
&lt;li&gt;db.json 静态常量&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;每次写文章是在_posts目录里操作，_config.yml文件和theme目录是第一次配置好就可以了。这里先主要介绍这三个文件的意义：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;_posts目录：Hexo是静态博客框架，没有数据库。所有的文章都已文件方式进行存储，就存在_posts目录下。Hexo集成了MarkDown，所有在写博客可以使用Markdown语法格式写博客。文件格式以.md形式存在，例如：hello-world.md。&lt;/li&gt;
&lt;li&gt;_themes目录：存放皮肤（博客样式），里面包含一套Javascript+CSS样式和基于EJS的模板设置。例如：themes目录下的landscape，这个是默认的皮肤。&lt;/li&gt;
&lt;li&gt;_config.yml是全局配置文件&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# Hexo Configuration&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;## Docs: https://hexo.io/docs/configuration.html&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;## Source: https://github.com/hexojs/hexo/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# Site 站点信息:定义标题,作者,语言&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        title: 这里是你博客的标题&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        subtitle: 不经一番彻寒骨，怎得梅花扑鼻香！&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        description: blog.fens.me&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        author: 笔名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        language: zh_CN&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        timezone:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# URL Url访问路径&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;## If your site is put in a subdirectory, set url as &#39;http://yoursite.com/child&#39; and root as &#39;/child/&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        url: http://yoursite.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        root: /&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        permalink: :year/:month/:day/:title/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        permalink_defaults:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# Directory 文件目录:正文的存储目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;_dir: &lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        public_dir: public&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        tag_dir: tags&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        archive_dir: archives&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        category_dir: categories&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        code_dir: downloads/code&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        i18n_dir: :lang&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        skip_render:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# Writing 写博客配置:文章标题,文章类型,外部链接&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        new_post_name: :title.md &lt;span class=&quot;comment&quot;&gt;# File name of new posts&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        default_layout: post&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        titlecase: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# Transform title into titlecase&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        external_link: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# Open external links in new tab&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        filename_&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt;: 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        render_drafts: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        post_asset_folder: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        relative_link: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        future: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        highlight:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;enable&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        line_number: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        auto_detect: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        tab_replace:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# Category &amp;amp; Tag   目录和标签:默认分类,分类图,标签图&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        default_category: uncategorized&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        category_map:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        tag_map:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# Date / Time format 时间和日期格式:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;## Hexo uses Moment.js to parse and display date&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;## You can customize the date format as defined in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;## http://momentjs.com/docs/#/displaying/format/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        date_format: YYYY-MM-DD&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        time_format: HH:mm:ss&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# Pagination   分页设置:每页显示数量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;## Set per_page to 0 to disable pagination&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        per_page: 10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        pagination_dir: page&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# Extensions   插件和皮肤:换皮肤,安装插件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;## Plugins: https://hexo.io/plugins/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;## Themes: https://hexo.io/themes/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        theme: landscape&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# Deployment   部署配置:github发布,type类型为git&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;## Docs: https://hexo.io/docs/deployment.html&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        deploy:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;创建新文章&quot;&gt;&lt;a href=&quot;#创建新文章&quot; class=&quot;headerlink&quot; title=&quot;创建新文章&quot;&gt;&lt;/a&gt;创建新文章&lt;/h3&gt;&lt;p&gt;接下来我来开始创建博客的第一篇文章，可以通过hexo命令创建，也可以在_posts文件目录下创建。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过命令行创建&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo new 新的一天&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1290061-0caa294f89b2dc98.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;新的一天截图.png&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在_posts目录下&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1290061-e1ff352b53191a50.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;Paste_Image.png&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;这里我们可以用Markdown语法写文章，&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;        ---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        title: 新的一天&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        date: 2016-06-28 15:20:20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        tags:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        - 第一天&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        - 日记&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        这是**新的一天**，我用hexo创建了第一篇文章。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        感觉非常好。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在命令行，启动hexo服务器，&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;        laoniede-MacBook-Pro:my_hexo xuxianmei$ hexo server&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        INFO  Start processing&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        INFO  Hexo is running at http:&lt;span class=&quot;comment&quot;&gt;//localhost:4000/. Press Ctrl+C to stop.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在浏览器打开，&lt;a href=&quot;http://localhost:4000/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:4000/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1290061-fe97f68436d5db8e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;新的修改.png&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;部署github&quot;&gt;&lt;a href=&quot;#部署github&quot; class=&quot;headerlink&quot; title=&quot;部署github&quot;&gt;&lt;/a&gt;部署github&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;静态化处理  （将文件转换成html，javascript，css）&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1290061-bae2a629853cf27a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;静态化处理.png&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;发布到github&lt;br&gt;在github中创建my_hexo项目，项目地址：&lt;a href=&quot;https://github.com/nfl404/my_hexo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/nfl404/my_hexo&lt;/a&gt; 。配置全局文件_config.yml，找到deploy部分，修改,&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;        deploy:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          repo: git@github.com:nfl404/my_hexo.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt;: git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;然后，通过命令部署，&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install hexo-deployer-git --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1290061-162b784522cbd01d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;保存hexo-deployer-git.png&quot;&gt;&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1290061-712b8a415b3d3149.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;部署hexo.png&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;静态网站就被部署到了github上，&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1290061-31732ac45a4566aa.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;Paste_Image.png&quot;&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;点击项目的Settings，找到Github Pages，打开网页&lt;a href=&quot;https://nfl404.github.io/my_hexo/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://nfl404.github.io/my_hexo/&lt;/a&gt;，就是刚刚发布的站点。&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1290061-75f30c391d676c58.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;站点显示内容.png&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;设置域名&lt;br&gt;我们可以看到访问通过部署github上的站点，和我们在本地浏览的样式不一样，原因是因站点访问的css和js的加载路径不对，我们绑定好域名后就可以正常显示了。域名注册可以在&lt;a href=&quot;https://www.baidu.com/s?wd=%E6%96%B0%E7%BD%91&amp;amp;rsv_spt=1&amp;amp;rsv_iqid=0xaf09323c00097313&amp;amp;issp=1&amp;amp;f=8&amp;amp;rsv_bp=0&amp;amp;rsv_idx=2&amp;amp;ie=utf-8&amp;amp;tn=baiduhome_pg&amp;amp;rsv_enter=1&amp;amp;rsv_sug3=8&amp;amp;rsv_sug1=7&amp;amp;rsv_sug7=100&amp;amp;rsv_t=d457rL19H7UESm5ejhoBL%2Bo%2BRnv4uOhWvZvBvXXTeo6xqNGpx%2FaUPoaIRm3fB8bXh9n%2B&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;万网&lt;/a&gt;或&lt;a href=&quot;http://www.xinnet.com/?utm_source=pc&amp;amp;utm_medium=pz&amp;amp;utm_term=%E6%A0%87%E9%A2%98&amp;amp;utm_content=%E6%A0%87%E9%A2%98&amp;amp;utm_campaign=%E6%A0%87%E9%A2%98%E6%8F%8F%E8%BF%B0&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;新网&lt;/a&gt;注册，或者其他。&lt;br&gt;域名注册成功后，我们开始解析域名，并且配置DNS。这个地方会有一些坑，下说下本人注册的域名是在&lt;a href=&quot;https://www.baidu.com/s?wd=%E6%96%B0%E7%BD%91&amp;amp;rsv_spt=1&amp;amp;rsv_iqid=0xaf09323c00097313&amp;amp;issp=1&amp;amp;f=8&amp;amp;rsv_bp=0&amp;amp;rsv_idx=2&amp;amp;ie=utf-8&amp;amp;tn=baiduhome_pg&amp;amp;rsv_enter=1&amp;amp;rsv_sug3=8&amp;amp;rsv_sug1=7&amp;amp;rsv_sug7=100&amp;amp;rsv_t=d457rL19H7UESm5ejhoBL%2Bo%2BRnv4uOhWvZvBvXXTeo6xqNGpx%2FaUPoaIRm3fB8bXh9n%2B&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;万网&lt;/a&gt;注册的，解析是在&lt;a href=&quot;https://www.dnspod.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;DNSPod&lt;/a&gt;解析的，为什么不在&lt;a href=&quot;https://www.baidu.com/s?wd=%E6%96%B0%E7%BD%91&amp;amp;rsv_spt=1&amp;amp;rsv_iqid=0xaf09323c00097313&amp;amp;issp=1&amp;amp;f=8&amp;amp;rsv_bp=0&amp;amp;rsv_idx=2&amp;amp;ie=utf-8&amp;amp;tn=baiduhome_pg&amp;amp;rsv_enter=1&amp;amp;rsv_sug3=8&amp;amp;rsv_sug1=7&amp;amp;rsv_sug7=100&amp;amp;rsv_t=d457rL19H7UESm5ejhoBL%2Bo%2BRnv4uOhWvZvBvXXTeo6xqNGpx%2FaUPoaIRm3fB8bXh9n%2B&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;万网&lt;/a&gt;解析，那就是因为万网解析遇到了太多坑。&lt;br&gt;添加域名，注册登录&lt;a href=&quot;https://www.dnspod.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;DNSPod&lt;/a&gt;，选择域名解析-&amp;gt;添加域名&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1290061-2ee858a1a37a9fd8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;DNSPod域名添加.png&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;登录&lt;a href=&quot;https://www.baidu.com/s?wd=%E6%96%B0%E7%BD%91&amp;amp;rsv_spt=1&amp;amp;rsv_iqid=0xaf09323c00097313&amp;amp;issp=1&amp;amp;f=8&amp;amp;rsv_bp=0&amp;amp;rsv_idx=2&amp;amp;ie=utf-8&amp;amp;tn=baiduhome_pg&amp;amp;rsv_enter=1&amp;amp;rsv_sug3=8&amp;amp;rsv_sug1=7&amp;amp;rsv_sug7=100&amp;amp;rsv_t=d457rL19H7UESm5ejhoBL%2Bo%2BRnv4uOhWvZvBvXXTeo6xqNGpx%2FaUPoaIRm3fB8bXh9n%2B&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;万网&lt;/a&gt;访问域名控制平台，修改DNS如下&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;f1g1ns1.dnspod.net &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f1g1ns2.dnspod.net&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1290061-b4268b9769e15c6c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;万网修改DNS.png&quot;&gt;&lt;br&gt;在DNSPod添加记录，设置主机记录，填写记录值（主机ip地址，&lt;a href=&quot;http://jingyan.baidu.com/article/ab0b5630a952ccc15afa7d24.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;如何获取ip地址&lt;/a&gt;，注意：如ip地址设有防火墙，请尝试其他地址），主机记录可以添加@和www两种即可。添加好后，点击开始解析。&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1290061-67863ba489a5f227.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;Paste_Image.png&quot;&gt;&lt;br&gt;最后，在github中创建一个CNAME的文件，文件中写出你要绑定的域名如&lt;a href=&quot;www.niefuling.com&quot;&gt;niefuling.com&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1290061-d7e337793998ee80.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;CNANME添加域名.png&quot;&gt;&lt;br&gt;查看项目Settings查看GitHub Pages，观察站点地址变化（注意：如果没有变化，原因是修改了DNS，DNS生效需要在48小时内完成），正确显示如下，&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1290061-7ad102e8caa35e09.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;站点地址变化.png&quot;&gt;&lt;br&gt;通过浏览器访问&lt;a href=&quot;http://niefuling.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://niefuling.com&lt;/a&gt; ，既可以看到你自己的博客了。&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1290061-eb3299d5f3f6de07.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;NiePlus的博客.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;结束。&lt;/p&gt;
&lt;p&gt;如有什么问题，可以在我的博客留言，&lt;a href=&quot;http://niefuling.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;点击这里&lt;/a&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;你们的支持也是我前进的动力，非常感谢支持！&lt;/p&gt;
&lt;p&gt;相关资料&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000000370778&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo —— 简单、快速、强大的Node.js静态博客框架&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.fens.me/hexo-blog-github/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo在github上构建免费的Web应用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.jianshu.com/p/465830080ea9&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HEXO+Github,搭建属于自己的博客&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.jianshu.com/p/e2a415612bc4&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo博客&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.jianshu.com/p/98ace695bdc4&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://hexo.io/zh-cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.jianshu.com/p/5e0ca2b14815&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;升级hexo碰到“Deployer not found”问题及解决&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Hexo&quot;&gt;&lt;a href=&quot;#Hexo&quot; class=&quot;headerlink&quot; title=&quot;Hexo&quot;&gt;&lt;/a&gt;Hexo&lt;/h2&gt;&lt;p&gt; Hexo是一种快速的、简单的、强大的、静态的博客框架，开发环境基于Node . js，支持MarkDown，支持Githu
    
    </summary>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>CocoaPods高级使用—发布代码</title>
    <link href="http://yoursite.com/2016/06/27/CocoaPods%E9%AB%98%E7%BA%A7%E4%BD%BF%E7%94%A8%E2%80%94%E5%8F%91%E5%B8%83%E4%BB%A3%E7%A0%81/"/>
    <id>http://yoursite.com/2016/06/27/CocoaPods高级使用—发布代码/</id>
    <published>2016-06-27T10:20:33.000Z</published>
    <updated>2016-06-27T10:25:04.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;在github上初始化工程（注意初始化工程名为CocoaPods上显示的名！）&quot;&gt;&lt;a href=&quot;#在github上初始化工程（注意初始化工程名为CocoaPods上显示的名！）&quot; class=&quot;headerlink&quot; title=&quot;在github上初始化工程（注意初始化工程名为CocoaPods上显示的名！）&quot;&gt;&lt;/a&gt;在github上初始化工程（注意初始化工程名为CocoaPods上显示的名！）&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;在github上初始化工程&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1290061-6563f6b9c2a88b74.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;github上初始化工程.png&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;将工程clone（克隆）到本地&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;built_in&quot;&gt;clone&lt;/span&gt; git@github.com:nfl404/NJAFNetworking.git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;NJAFNetworking文件目录&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1290061-53eec69a91072dda.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;NJAFNetworking文件目录.png&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;用Xcode创建NJAFNetworkingExtension工程（此工程为了创建NJAFNetworking代码编码用）&quot;&gt;&lt;a href=&quot;#用Xcode创建NJAFNetworkingExtension工程（此工程为了创建NJAFNetworking代码编码用）&quot; class=&quot;headerlink&quot; title=&quot;用Xcode创建NJAFNetworkingExtension工程（此工程为了创建NJAFNetworking代码编码用）&quot;&gt;&lt;/a&gt;用Xcode创建NJAFNetworkingExtension工程（此工程为了创建NJAFNetworking代码编码用）&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;创建NJAFNetworkingExtension工程&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1290061-4f2edae4c58311b5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;用Xcode创建NJAFNetworkingExtension工程.png&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;工程目录&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1290061-89fd7511cf6e2de5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;工程目录文件层级.png&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;注册trunk（如果已经注册过，可忽略）&quot;&gt;&lt;a href=&quot;#注册trunk（如果已经注册过，可忽略）&quot; class=&quot;headerlink&quot; title=&quot;注册trunk（如果已经注册过，可忽略）&quot;&gt;&lt;/a&gt;注册trunk（如果已经注册过，可忽略）&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;使用trunk原理流程&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1290061-c68411e93643aeee.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;使用trunk原理流程.png&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;注册使用trunk&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pod trunk register 785558516@qq.com &lt;span class=&quot;string&quot;&gt;&#39;nieplus&#39;&lt;/span&gt; --verbose&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;注释：–verbose参数是为了便于输出注册过程中的调试信息。执行上面的语句后，验证邮箱收到的邮件即可。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查询trunk注册信息&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pod trunk me&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1290061-7760717f3d0c43e6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;trunk注册信息.png&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;将NJAFNetworking文件夹内代码托管发布到CocoaPods&quot;&gt;&lt;a href=&quot;#将NJAFNetworking文件夹内代码托管发布到CocoaPods&quot; class=&quot;headerlink&quot; title=&quot;将NJAFNetworking文件夹内代码托管发布到CocoaPods&quot;&gt;&lt;/a&gt;将NJAFNetworking文件夹内代码托管发布到CocoaPods&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;将Xocde创建的工程文件复制到由github上clone到本地的NJAFNetworking文件夹中&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1290061-57b45df0815ca20a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;NJAFNetworking文件目录.png&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;生成PodSpec文件（NJAFNetworking.podspec）&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pod spec create NJAFNetworking&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;注释：NJAFNetworking文件为在CocoaPods上发布的文件名。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1290061-7e5940e401a873ee.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;NJAFNetworking文件目录.png&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;配置PodSpec文件（NJAFNetworking.podspec）&lt;/p&gt;
&lt;p&gt;编辑NJAFNetworking.podspec文件&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vim NJAFNetworking.podspec&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;NJAFNetworking.podspec可以按照以下模板配置&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;        Pod::Spec.new &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; |s|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        s.name         = &lt;span class=&quot;string&quot;&gt;&quot;NJAFNetworking&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        s.version      = &lt;span class=&quot;string&quot;&gt;&quot;1.0.2&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        s.summary      = &lt;span class=&quot;string&quot;&gt;&quot;基于AFNetworking框架的简单封装，POST请求，GET请求，上传文件，下载文件等。&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        s.homepage     = &lt;span class=&quot;string&quot;&gt;&quot;https://niefuling.com/&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        s.license      = &lt;span class=&quot;string&quot;&gt;&quot;MIT&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        s.author       = &amp;#123; &lt;span class=&quot;string&quot;&gt;&quot;niefuling&quot;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&quot;785558516@qq.com&quot;&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        s.platform     = :ios, &lt;span class=&quot;string&quot;&gt;&quot;7.0&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        s.source       = &amp;#123; :git =&amp;gt; &lt;span class=&quot;string&quot;&gt;&quot;https://github.com/nfl404/NJAFNetworking.git&quot;&lt;/span&gt;, :tag =&amp;gt; &lt;span class=&quot;string&quot;&gt;&quot;1.0.2&quot;&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        s.source_files  = &lt;span class=&quot;string&quot;&gt;&quot;NJAFNetworking&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;*.&amp;#123;h,m&amp;#125;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        s.requires_arc = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        s.dependency &lt;span class=&quot;string&quot;&gt;&quot;AFNetworking&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;~&amp;gt; 3.1.0&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        end&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;注释：name:CocoaPods上显示搜索的名字；version：版本号；summary：CocoaPods上显示的描述信息；homepage：个人主页链接；license：github初始化工程添加的license文件；author：作者联系信息；platform:支持的环境版本号；source：下载地址；source_files：上传的文件夹（指NJAFNetworking文件夹下的所有.h与.m文件）；requires_arc：默认true；dependency：引用其他的第三方库。&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;将文件提交到github上&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git add .&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git commit -m &lt;span class=&quot;string&quot;&gt;&#39; 初始化文件&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git push origin master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;检验文件是否正确&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pod lib lint&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;注释：在pod lib lint 后面加上–verbose后可以得出更详细的信息，然后根据提示修改警告或者错误文件，这一步会有很对坑，请仔细修改错误，否者无法成功。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1290061-e93148e802e67bbe.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;检验文件.png&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;将文件发布到CocoaPods上&lt;/p&gt;
&lt;p&gt; 创建分支(这里的分支与下面的tag是匹配的，一个分之匹配一个tag)&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git branch 1.0.2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git push origin 1.0.2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; 创建tag（这里的tag值是对应NJAFNetworking.podspec中的版本号，两者必须保持一致）&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git tag &lt;span class=&quot;string&quot;&gt;&#39;1.0.2&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git push --tags&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;   将文件发布到CocoaPods上（成功后，可以通过pod search 搜索你上传的文件了）&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pod trunk push NJAFNetworking.podspec&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;结束。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;你们的支持也是我前进的动力，非常感谢支持！&lt;/p&gt;
&lt;p&gt;相关资料&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/wzzvictory/article/details/20067595&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; &lt;a href=&quot;http://blog.csdn.net/wzzvictory/article/details/20067595&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CocoaPods详解之—-制作篇&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.3fwork.com/b601/002365MYM014029/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[iOS开发]将自己写的库上传到cocoapods（2015）
&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.cnbluebox.com/blog/2014/03/31/cocoapodsdai-ma-guan-li/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Cocoapods代码管理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.henishuo.com/cocoapods-use/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Cocoapods高级使用&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;在github上初始化工程（注意初始化工程名为CocoaPods上显示的名！）&quot;&gt;&lt;a href=&quot;#在github上初始化工程（注意初始化工程名为CocoaPods上显示的名！）&quot; class=&quot;headerlink&quot; title=&quot;在github上初始化工程（
    
    </summary>
    
    
      <category term="CocoaPods" scheme="http://yoursite.com/tags/CocoaPods/"/>
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS开发-网络框架</title>
    <link href="http://yoursite.com/2016/06/09/iOS%E5%BC%80%E5%8F%91-%E7%BD%91%E7%BB%9C%E6%A1%86%E6%9E%B6/"/>
    <id>http://yoursite.com/2016/06/09/iOS开发-网络框架/</id>
    <published>2016-06-09T10:49:26.000Z</published>
    <updated>2016-06-22T10:53:30.000Z</updated>
    
    <content type="html">&lt;p&gt;网络框架（以下称NJAFNetworking）是基于AFNetworking框架的简单封装，基本功能包括POST请求，GET请求，上传文件，下载文件，网络状态，缓存等。&lt;/p&gt;
&lt;h2 id=&quot;为什么要使用NJAFNetworking？&quot;&gt;&lt;a href=&quot;#为什么要使用NJAFNetworking？&quot; class=&quot;headerlink&quot; title=&quot;为什么要使用NJAFNetworking？&quot;&gt;&lt;/a&gt;为什么要使用NJAFNetworking？&lt;/h2&gt;&lt;p&gt;在使用AFNetworking的时候我们会发现对外开发接口比较多，当项目需求涉及到缓存，以及网络判断的时候，我们都无从下手。然NJAFNetworking框架将这些过多的开发接口封装到一起，让我们使用起来更为方便。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;优点：&lt;ul&gt;
&lt;li&gt;网络状态已经封装，在通过GET/POST请求会回调；&lt;/li&gt;
&lt;li&gt;缓存已经封装，当GET/POST请求失败后会回调；&lt;/li&gt;
&lt;li&gt;开发接口少，只需调用相应功能功能的接口即可。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;NJAFNetworking究竟是什么？&quot;&gt;&lt;a href=&quot;#NJAFNetworking究竟是什么？&quot; class=&quot;headerlink&quot; title=&quot;NJAFNetworking究竟是什么？&quot;&gt;&lt;/a&gt;NJAFNetworking究竟是什么？&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;配置公共的请求头（可以不配置）&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;        /**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *  配置公共的请求头，用于区分请求来源，需要与服务器约定好&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *  @param httpHeaders      如@&amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;client&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;iOS&quot;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        + (void)configCommonHttpHeaders:(NSDictionary *)httpHeaders;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;更新请求接口基础url（如果服务器地址有多个，可以不配置）&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;        /**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *  更新请求接口基础url（如果服务器地址有多个）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *  @param baseUrl 请求接口基础url&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        + (void)updateBaseUrl:(NSString *)baseUrl;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;GET请求接口&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;        /**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *  GET请求接口&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *  @param url          访问地址路径，如/user/index/login&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *  @param refreshCache 是否刷新缓存，YES&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *  @param params       需要传的参数，如@&amp;#123;@&lt;span class=&quot;string&quot;&gt;&quot;user_id&quot;&lt;/span&gt; :@(80011)&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *  @param progress     进度回调，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *  @param success      接口请求响应成功回调&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *  @param fail         接口请求响应失败回调&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *  @&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt;             NSURLSessionTask&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        + (NJURLSessionTask *)getWithUrl:(NSString *)url&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            refreshCache:(BOOL)refreshCache&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                  params:(NSDictionary *)params&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                progress:(NJLoadProgress)progress&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                 success:(NJResponseSuccess)success&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    fail:(NJResponseFail)fail;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;POST请求接口&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;        /**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *  POST请求接口&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *  @param url          访问地址路径，如/user/index/login&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *  @param refreshCache 是否刷新缓存，YES&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *  @param params       需要传的参数，如@&amp;#123;@&lt;span class=&quot;string&quot;&gt;&quot;user_id&quot;&lt;/span&gt; :@(80011)&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *  @param progress     进度回调，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *  @param success      接口请求响应成功回调&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *  @param fail         接口请求响应失败回调&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *  @&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt;             NSURLSessionTask&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        + (NJURLSessionTask *)postWithUrl:(NSString *)url&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                             refreshCache:(BOOL)refreshCache&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                   params:(NSDictionary *)params&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                 progress:(NJLoadProgress)progress&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                  success:(NJResponseSuccess)success&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                     fail:(NJResponseFail)fail;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;图片上传接口&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;        /**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *  图片上传接口&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *  @param image        图片对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *  @param url          上传图片路径，如/user/images&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *  @param filename     文件名字，默认为当前时间yyyyMMddHHmmss.jpg&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *  @param name         约定关联名称，如image&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *  @param mimeType     默认iamge/jpeg&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *  @param parameters   需要传的参数，如@&amp;#123;@&lt;span class=&quot;string&quot;&gt;&quot;user_id&quot;&lt;/span&gt; :@(80011)&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *  @param progress     上传进度回调&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *  @param success      上传成功回调&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *  @param fail         上传失败回调&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *  @&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt;             NSURLSessionTask&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        + (NJURLSessionTask *)uploadWithImage:(UIImage *)image&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                          url:(NSString *)url&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                     filename:(NSString *)filename&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                         name:(NSString *)name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                     mimeType:(NSString *)mimeType&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                   parameters:(NSDictionary *)parameters&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                     progress:(NJLoadProgress)progress&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                      success:(NJResponseSuccess)success&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                         fail:(NJResponseFail)fail;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;上传文件&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;        /**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *  上传文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *  @param url              上传文件路径，如/user/images&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *  @param uploadingFile    待上传文件路径，如/user/images&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *  @param progress         进度回调&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *  @param success          上传成功回调&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *  @param fail             上传失败回调&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *  @&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt;                 NSURLSessionTask&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        + (NJURLSessionTask *)uploadFileWithUrl:(NSString *)url&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                  uploadingFile:(NSString *)uploadingFile&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                       progress:(NJLoadProgress)progress&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                        success:(NJResponseSuccess)success&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                           fail:(NJResponseFail)fail;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;下载文件&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;        /**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *  下载文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *  @param url              下载文件URL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *  @param saveToPath       下载到那个路径下&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *  @param progress         下载进度&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *  @param success          下载成功后的回调&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *  @param fail             下载失败后的回调&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         *  @&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; NSURLSessionTask&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        + (NJURLSessionTask *)downloadWithUrl:(NSString *)url&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                   saveToPath:(NSString *)saveToPath&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                     progress:(NJLoadProgress)progress&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                      success:(NJResponseSuccess)success&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                         fail:(NJResponseFail)fail;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;如何使用NJAFNetworking？&quot;&gt;&lt;a href=&quot;#如何使用NJAFNetworking？&quot; class=&quot;headerlink&quot; title=&quot;如何使用NJAFNetworking？&quot;&gt;&lt;/a&gt;如何使用NJAFNetworking？&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;NJAFNetworking支持CocoaPods(&lt;a href=&quot;http://www.jianshu.com/p/e46d57ecc1f2&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CocoaPods是什么？&lt;/a&gt;)&lt;br&gt;写在Podfile文件中，&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;https://github.com/CocoaPods/Specs.git&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        inhibit_all_warnings!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        target &lt;span class=&quot;string&quot;&gt;&quot;这里写你的工程名字&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        pod &lt;span class=&quot;string&quot;&gt;&#39;NJAFNetworking&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;~&amp;gt; 1.0.1&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        end&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;下载NJAFNetworking（&lt;a href=&quot;https://github.com/nfl404/NJAFNetworking&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;下载地址&lt;/a&gt;）&lt;br&gt;下载完后将NJAFNetworking文件夹拖入工程中即可。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;结束。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;如果你觉得不错请支持下我&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1290061-f554fa86a3cbd60c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;微信支持.png&quot;&gt;&lt;br&gt;你们的支持也是我前进的动力,非常感谢支持!&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;网络框架（以下称NJAFNetworking）是基于AFNetworking框架的简单封装，基本功能包括POST请求，GET请求，上传文件，下载文件，网络状态，缓存等。&lt;/p&gt;
&lt;h2 id=&quot;为什么要使用NJAFNetworking？&quot;&gt;&lt;a href=&quot;#为什么要使用N
    
    </summary>
    
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
      <category term="网络框架" scheme="http://yoursite.com/tags/%E7%BD%91%E7%BB%9C%E6%A1%86%E6%9E%B6/"/>
    
      <category term="AFNetworking" scheme="http://yoursite.com/tags/AFNetworking/"/>
    
  </entry>
  
  <entry>
    <title>MarkDown语法</title>
    <link href="http://yoursite.com/2016/06/09/MarkDown%E8%AF%AD%E6%B3%95/"/>
    <id>http://yoursite.com/2016/06/09/MarkDown语法/</id>
    <published>2016-06-09T08:50:11.000Z</published>
    <updated>2016-06-21T08:55:14.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Quick-Start-一级标题&quot;&gt;&lt;a href=&quot;#Quick-Start-一级标题&quot; class=&quot;headerlink&quot; title=&quot;Quick Start(一级标题)&quot;&gt;&lt;/a&gt;Quick Start(一级标题)&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post-二级标题&quot;&gt;&lt;a href=&quot;#Create-a-new-post-二级标题&quot; class=&quot;headerlink&quot; title=&quot;Create a new post (二级标题)&quot;&gt;&lt;/a&gt;Create a new post (二级标题)&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;MarkDown语法链接: &lt;a href=&quot;http://www.jianshu.com/p/7cc9c26e8b7a&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;更多请点击我&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Quick-Start-一级标题&quot;&gt;&lt;a href=&quot;#Quick-Start-一级标题&quot; class=&quot;headerlink&quot; title=&quot;Quick Start(一级标题)&quot;&gt;&lt;/a&gt;Quick Start(一级标题)&lt;/h2&gt;&lt;h3 id=&quot;Create-
    
    </summary>
    
    
      <category term="MarkDown" scheme="http://yoursite.com/tags/MarkDown/"/>
    
  </entry>
  
  <entry>
    <title>从Native App 到Hybrid App</title>
    <link href="http://yoursite.com/2016/06/08/%E4%BB%8ENativeApp%E5%88%B0HybridApp/"/>
    <id>http://yoursite.com/2016/06/08/从NativeApp到HybridApp/</id>
    <published>2016-06-08T08:36:25.000Z</published>
    <updated>2016-06-21T08:57:56.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;什么是Native-App？什么是Hybrid-App？&quot;&gt;&lt;a href=&quot;#什么是Native-App？什么是Hybrid-App？&quot; class=&quot;headerlink&quot; title=&quot;什么是Native App？什么是Hybrid App？&quot;&gt;&lt;/a&gt;什么是Native App？什么是Hybrid App？&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Native App（原生APP开发模式），像iOS，Android单语言开发。&lt;/li&gt;
&lt;li&gt;Hybrid App（混合App开发模式），部分代码以WEB技术编程，部分代码由某些Native Container承担（例如PhonGAP插件，BAE插件），其目的是在HTML5尚未完全支持Device API和Network API的目前阶段，承担这部分职责。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;那么介绍完这两个名词后，我们先上两张Web App，Hybrid App，Native App对比图：&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1290061-4c86336e924375b9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;webapp，hybridapp，nativeapp对比.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1290061-07843c5e13f617bc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;native，html5,hybrid对比.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;其优越点有了这两张图即可一目了然，显然Hybrid 开发带来了很大的方便。&lt;/p&gt;
&lt;h2 id=&quot;怎样在项目中使用Hybrid-App-开发？&quot;&gt;&lt;a href=&quot;#怎样在项目中使用Hybrid-App-开发？&quot; class=&quot;headerlink&quot; title=&quot;怎样在项目中使用Hybrid App 开发？&quot;&gt;&lt;/a&gt;怎样在项目中使用Hybrid App 开发？&lt;/h2&gt;&lt;p&gt;想要在项目中使用Hybrid App开发必然要先了解下支持Hybrid App开发的开源框架。&lt;/p&gt;
&lt;h3 id=&quot;Ionic&quot;&gt;&lt;a href=&quot;#Ionic&quot; class=&quot;headerlink&quot; title=&quot;Ionic&quot;&gt;&lt;/a&gt;Ionic&lt;/h3&gt;&lt;p&gt;Ionic是一个用来开发混合手机应用的，开源的，免费的代码库。可以优化html，css和js的性能，构建高效的应用程序，而且还可以用于构建Sass和AngularJs的优化。Ionic会是一个可以信赖的框架。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1290061-779cc2c02ade0483.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;Ionic.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;详细了解：&lt;a href=&quot;http://www.ionic.wang/start-index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.ionic.wang/start-index.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;React&quot;&gt;&lt;a href=&quot;#React&quot; class=&quot;headerlink&quot; title=&quot;React&quot;&gt;&lt;/a&gt;React&lt;/h3&gt;&lt;p&gt;React Native 结合了 Web 应用和 Native 应用的优势，可以使用 JavaScript 来开发 iOS 和 Android 原生应用。在 JavaScript 中用 React 抽象操作系统原生的 UI 组件，代替 DOM 元素来渲染等。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1290061-57f232cc9e0dc9a3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;React Native.png&quot;&gt;&lt;br&gt;React Native的理解以及优缺：&lt;br&gt;比较详细可以看这个&lt;a href=&quot;http://div.io/topic/851&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://div.io/topic/851&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;查看资料：&lt;br&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000002688632&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;使用ionic框架开发移动hybrid应用&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://div.io/topic/851&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;我对 React Native 的理解和看法&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.jianshu.com/p/ef95a7c753c1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Dcloud 分析&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;什么是Native-App？什么是Hybrid-App？&quot;&gt;&lt;a href=&quot;#什么是Native-App？什么是Hybrid-App？&quot; class=&quot;headerlink&quot; title=&quot;什么是Native App？什么是Hybrid App？&quot;&gt;&lt;/a&gt;什么
    
    </summary>
    
    
      <category term="Hybrid" scheme="http://yoursite.com/tags/Hybrid/"/>
    
      <category term="Native" scheme="http://yoursite.com/tags/Native/"/>
    
      <category term="React" scheme="http://yoursite.com/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>用ReactNative开发一个应用</title>
    <link href="http://yoursite.com/2016/06/02/%E7%94%A8ReactNative%E5%BC%80%E5%8F%91%E4%B8%80%E4%B8%AA%E5%BA%94%E7%94%A8/"/>
    <id>http://yoursite.com/2016/06/02/用ReactNative开发一个应用/</id>
    <published>2016-06-02T10:43:49.000Z</published>
    <updated>2016-06-21T11:18:25.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;在React-Native中创建“Hello-World”程序&quot;&gt;&lt;a href=&quot;#在React-Native中创建“Hello-World”程序&quot; class=&quot;headerlink&quot; title=&quot;在React Native中创建“Hello World”程序&quot;&gt;&lt;/a&gt;在React Native中创建“Hello World”程序&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;创建项目&lt;/li&gt;
&lt;li&gt;使用Xcode&lt;/li&gt;
&lt;li&gt;使用模拟器&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;React基础&quot;&gt;&lt;a href=&quot;#React基础&quot; class=&quot;headerlink&quot; title=&quot;React基础&quot;&gt;&lt;/a&gt;React基础&lt;/h2&gt;&lt;p&gt;应用中会用到的组件列表。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import React, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  AppRegistry,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Component,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  StyleSheet,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Text,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  View&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; from &lt;span class=&quot;string&quot;&gt;&#39;react-native&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;render函数&quot;&gt;&lt;a href=&quot;#render函数&quot; class=&quot;headerlink&quot; title=&quot;render函数&quot;&gt;&lt;/a&gt;render函数&lt;/h3&gt;&lt;p&gt;使用以下这段代码，我们能够创建一个自定义组件：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class GithubFinder extends Component &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;render&lt;/span&gt;&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;View style=&amp;#123;styles.container&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &amp;lt;Text style=&amp;#123;styles.welcome&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Welcome to React Native!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &amp;lt;Text style=&amp;#123;styles.instructions&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                To get started, edit index.ios.js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &amp;lt;Text style=&amp;#123;styles.instructions&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Press Cmd+R to reload,&amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;\n&#39;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Cmd+D or shake &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; dev menu&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在这个组件中，我们只包含了一个方法：render，这个方法没有参数，只是简单地返回我们希望这个组件渲染出来的视图。&lt;/p&gt;
&lt;h3 id=&quot;样式&quot;&gt;&lt;a href=&quot;#样式&quot; class=&quot;headerlink&quot; title=&quot;样式&quot;&gt;&lt;/a&gt;样式&lt;/h3&gt;&lt;p&gt;在我们的组件中，我们能够看到styles属性。我们在文件底部定义他们的取值：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;const styles = StyleSheet.create(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  container: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    flex: 1,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    justifyContent: &lt;span class=&quot;string&quot;&gt;&#39;center&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    alignItems: &lt;span class=&quot;string&quot;&gt;&#39;center&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    backgroundColor: &lt;span class=&quot;string&quot;&gt;&#39;#F5FCFF&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  welcome: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fontSize: 20,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    textAlign: &lt;span class=&quot;string&quot;&gt;&#39;center&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    margin: 10,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  instructions: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    textAlign: &lt;span class=&quot;string&quot;&gt;&#39;center&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    color: &lt;span class=&quot;string&quot;&gt;&#39;#333333&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    marginBottom: 5,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;调用StyleSheet.create函数能够创建很多不同的样式规则，可以把它们想成CSS规则，用来在每个条目中定义不同的样式。这里flex是Flexbox的属性，可以用来定义内容在视图中的布局，比如将一个项目放到另一个项目的左边，或者诸如此类的事情。我们可以通过styles.container来定义相应View组件的样式。&lt;br&gt;对于已经做过Objective-C开发的人来说，这种类似CSS的样式定义方式要比使用接口来构建样式容易得多，它将节省我们大量的时间。除此之外，我们不需要重新加载整个应用来查看样式的变化，只需要在模拟器中使用Cmd＋R组合键就可以看到文本的变化了，太神奇了！&lt;br&gt;注意，React CSS是常用CSS的一个子集。可以看到，大多数的属性会稍微修改一下名称，比如text-align会写成textAlign。&lt;/p&gt;
&lt;h3 id=&quot;注册组件&quot;&gt;&lt;a href=&quot;#注册组件&quot; class=&quot;headerlink&quot; title=&quot;注册组件&quot;&gt;&lt;/a&gt;注册组件&lt;/h3&gt;&lt;p&gt;最后，在文件的末尾有这样一行代码：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;AppRegistry.registerComponent(&lt;span class=&quot;string&quot;&gt;&#39;GithubFinder&#39;&lt;/span&gt;, () =&amp;gt; GithubFinder);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;AppRegistry.registerComponent方法用来注册我们的组件。这意味着，当iOS应用开始运行时，GithubFinder组件是出现的第一个组件。因此，当我们的应用开始运行的时候，它就知道该怎么做了。这个方法的调用一般会放到我们React Native应用代码的最后一行，基本上是开启应用的方式之一。&lt;/p&gt;
&lt;h3 id=&quot;修改组建&quot;&gt;&lt;a href=&quot;#修改组建&quot; class=&quot;headerlink&quot; title=&quot;修改组建&quot;&gt;&lt;/a&gt;修改组建&lt;/h3&gt;&lt;p&gt;现在我们已经理解组件了，让我们试着修改下它们。修改render 函数如下：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class GithubFinder extends Component &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;render&lt;/span&gt;&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;View style=&amp;#123;styles.container&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;Text style=&amp;#123;styles.welcome&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          This is my first custom view!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;Image&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;=&amp;#123;&amp;#123;uri : &lt;span class=&quot;string&quot;&gt;&#39;http://upload-images.jianshu.io/upload_images/629934-74052f8714dc122c.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&#39;&lt;/span&gt;&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         style=&amp;#123;styles.customimg&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;你可能已经注意到了，当我们使用变量时，使用了｛｝符号。我们能通过这种方式把一个变量名添加到HTML中。在这里这么做的原因是我们想要给节点增加样式，比如说，我们提到的styles 变量，不再仅仅是简单的关键字‘styles’了。此外，对于标签中的sources属性，我们用两对｛｝来表示一个JavaScript对象，这个对象是用在节点属性中。&lt;br&gt;参考下面的内容修改一下样式对象，为Image对象增加宽和高。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;const styles = StyleSheet.create(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    container: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    flex: 1,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    justifyContent: &lt;span class=&quot;string&quot;&gt;&#39;center&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    alignItems: &lt;span class=&quot;string&quot;&gt;&#39;center&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    backgroundColor: &lt;span class=&quot;string&quot;&gt;&#39;#F5FCFF&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    customimg: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    width: 200,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    height: 200&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;另外还有意见要做的事，即增加我们当前使用的Image组件的声明，在文件的开头修改React 对象。如下：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import React, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  AppRegistry,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Component,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  StyleSheet,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Text,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  View,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Image&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; from &lt;span class=&quot;string&quot;&gt;&#39;react-native&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;现在，我们应用的呆啊看起来是下面这样的：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import React, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  AppRegistry,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Component,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  StyleSheet,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Text,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  View,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Image&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; from &lt;span class=&quot;string&quot;&gt;&#39;react-native&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class GithubFinder extends Component &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;render&lt;/span&gt;&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;View style=&amp;#123;styles.container&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;Text style=&amp;#123;styles.welcome&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          This is my first custom view!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;Image&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;=&amp;#123;&amp;#123;uri : &lt;span class=&quot;string&quot;&gt;&#39;http://upload-images.jianshu.io/upload_images/629934-74052f8714dc122c.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&#39;&lt;/span&gt;&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         style=&amp;#123;styles.customimg&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;const styles = StyleSheet.create(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  container: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    flex: 1,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    justifyContent: &lt;span class=&quot;string&quot;&gt;&#39;center&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    alignItems: &lt;span class=&quot;string&quot;&gt;&#39;center&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    backgroundColor: &lt;span class=&quot;string&quot;&gt;&#39;#F5FCFF&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  customimg: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    width: 200,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    height: 200&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;AppRegistry.registerComponent(&lt;span class=&quot;string&quot;&gt;&#39;GithubFinder&#39;&lt;/span&gt;, () =&amp;gt; GithubFinder);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;应用界面是这样的：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1290061-656030c34a19ddab.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;自定义view.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;喔！现在你已经实现了自己的第一个自定义View。&lt;/p&gt;
&lt;h2 id=&quot;搜索框和数据检索&quot;&gt;&lt;a href=&quot;#搜索框和数据检索&quot; class=&quot;headerlink&quot; title=&quot;搜索框和数据检索&quot;&gt;&lt;/a&gt;搜索框和数据检索&lt;/h2&gt;&lt;p&gt;现在我们将要获取数据了，要实现这个功能，就要使用到GitHub的API，这样非常简单而且容易上手。让我们开始吧。&lt;/p&gt;
&lt;h3 id=&quot;增加搜索框&quot;&gt;&lt;a href=&quot;#增加搜索框&quot; class=&quot;headerlink&quot; title=&quot;增加搜索框&quot;&gt;&lt;/a&gt;增加搜索框&lt;/h3&gt;&lt;p&gt;首先，需要添加搜索框。我们将使用一个普通的TextInput和一些样式来实现搜索框。参考如下的代码来修改render 方法：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class GithubFinder extends Component &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;render&lt;/span&gt;&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;View style=&amp;#123;styles.container&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;TextInput&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         autoCapitalize=&lt;span class=&quot;string&quot;&gt;&quot;none&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         autoCorrect=&amp;#123;&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         placeholder=&lt;span class=&quot;string&quot;&gt;&quot;Search for a project...&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         style=&amp;#123;styles.searchBarInput&amp;#125;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;基本上我们创建完成了有一些不同属性的TextInpust对象，我们不需要自动填充和自动更正的功能，只需增加placeholder 文本和一些样式。样式如下：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;const styles = StyleSheet.create(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  container: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    flex: 1,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    backgroundColor: &lt;span class=&quot;string&quot;&gt;&#39;#F5FCFF&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  searchBarInput: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    marginTop: 30,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    padding: 5,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fontSize: 15,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    height: 30,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    backgroundColor: &lt;span class=&quot;string&quot;&gt;&#39;#EAEAEA&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我们修改了TextInput背景颜色来让它更明显，设置了height和margin-top，增加了padding。修改完成以后，看起来如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1290061-2c80a3b1257bea27.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;TextInput.png&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;方法代理&quot;&gt;&lt;a href=&quot;#方法代理&quot; class=&quot;headerlink&quot; title=&quot;方法代理&quot;&gt;&lt;/a&gt;方法代理&lt;/h3&gt;&lt;p&gt;现在，我们需要用户在搜书框输入的时候，调用API来进行搜索。要做到这一点，我么你需要完成方法的代理绑定，就是指当有一些行为发生时执行某个函数，在当前情况下的行为就是在搜索框停止输入。要做到这一点，我们只要设置文本框的onEndEditing属性，如下：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class GithubFinder extends Component &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;render&lt;/span&gt;&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;View style=&amp;#123;styles.container&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;TextInput&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         autoCapitalize=&lt;span class=&quot;string&quot;&gt;&quot;none&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         autoCorrect=&amp;#123;&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         placeholder=&lt;span class=&quot;string&quot;&gt;&quot;Search for a project...&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         style=&amp;#123;styles.searchBarInput&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         onEndEditing=&amp;#123;this.onSearchChange&amp;#125;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;当搜索内容变化的时候，调用GitHub API查询结果的功能还没有实现，我们下面就来实现这个功能。&lt;/p&gt;
&lt;h3 id=&quot;检索数据&quot;&gt;&lt;a href=&quot;#检索数据&quot; class=&quot;headerlink&quot; title=&quot;检索数据&quot;&gt;&lt;/a&gt;检索数据&lt;/h3&gt;&lt;p&gt;现在我们来实现onSearchChange函数，通过GitHub的API来查询结果。如下：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var BASE_URL = &lt;span class=&quot;string&quot;&gt;&#39;https://api.github.com/search/repositories?q=&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class GithubFinder extends Component &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  //渲染UI&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;render&lt;/span&gt;&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;View style=&amp;#123;styles.container&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;TextInput&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         autoCapitalize=&lt;span class=&quot;string&quot;&gt;&quot;none&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         autoCorrect=&amp;#123;&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         placeholder=&lt;span class=&quot;string&quot;&gt;&quot;Search for a project...&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         style=&amp;#123;styles.searchBarInput&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         onEndEditing=&amp;#123;this.onSearchChange&amp;#125;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  //检索数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  onSearchChange: &lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(event: object) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var searchTerm = event.nativeEvent.text.toLowerCase();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var queryURL = BASE_URL + encodeURIComponent(searchTerm);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fetch(queryURL)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .then((response) =&amp;gt; response.json())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .then((responseData) =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (responseData.items) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.setState(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          dataSource: this.state.dataSource.cloneWithRows(responseData.items),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .done();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;const styles = StyleSheet.create(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  container: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    flex: 1,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    backgroundColor: &lt;span class=&quot;string&quot;&gt;&#39;#F5FCFF&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  searchBarInput: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    marginTop: 30,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    padding: 5,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fontSize: 15,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    flex: 1,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    height: 30,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    backgroundColor: &lt;span class=&quot;string&quot;&gt;&#39;#EAEAEA&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;AppRegistry.registerComponent(&lt;span class=&quot;string&quot;&gt;&#39;GithubFinder&#39;&lt;/span&gt;, () =&amp;gt; GithubFinder);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;显示结果&quot;&gt;&lt;a href=&quot;#显示结果&quot; class=&quot;headerlink&quot; title=&quot;显示结果&quot;&gt;&lt;/a&gt;显示结果&lt;/h2&gt;&lt;p&gt;现在我们有了自己点数据，接下来我们让结果列表形式呈现，在这个列表视图中，每一行都对应一条通过搜索GitHub返回的数据。开始吧！&lt;/p&gt;
&lt;h3 id=&quot;组建状态&quot;&gt;&lt;a href=&quot;#组建状态&quot; class=&quot;headerlink&quot; title=&quot;组建状态&quot;&gt;&lt;/a&gt;组建状态&lt;/h3&gt;&lt;p&gt;在前一节中，我们调用了this.setState方法，这是我们还没有介绍的React的一个重要概念。每一个组件都有自己的状态（state），用来存储组件的数据。在这个例子中，我们希望能够存储当前列表中显示的数据。当我们的组件首次被渲染的时候，可以通过getInitialState方法来初始化状态。如下：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class GithubFinder extends Component &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  //组件状态&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  getInitialState: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;function&lt;/span&gt;&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      dataSource: new ListView.DataSource(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        rowHasChanged: (row1, row2) =&amp;gt; row1 !== row2,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  //渲染UI&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;render&lt;/span&gt;&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;View style=&amp;#123;styles.container&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;TextInput&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         autoCapitalize=&lt;span class=&quot;string&quot;&gt;&quot;none&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         autoCorrect=&amp;#123;&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         placeholder=&lt;span class=&quot;string&quot;&gt;&quot;Search for a project...&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         style=&amp;#123;styles.searchBarInput&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         onEndEditing=&amp;#123;this.onSearchChange&amp;#125;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  //检索数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  onSearchChange: &lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(event: object) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var searchTerm = event.nativeEvent.text.toLowerCase();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var queryURL = BASE_URL + encodeURIComponent(searchTerm);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fetch(queryURL)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .then((response) =&amp;gt; response.json())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .then((responseData) =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (responseData.items) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.setState(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          dataSource: this.state.dataSource.cloneWithRows(responseData.items),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .done();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;注意，因为我们在这里使用ListView，所以我们需要把它添加到文件最开始的组件列表中，如下：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import React, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  AppRegistry,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Component,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  StyleSheet,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  View,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  TextInput&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ListView,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; from &lt;span class=&quot;string&quot;&gt;&#39;react-native&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在这里，我们通过属性创建了一个空白的数据源，该函数用来监控一行数据是否发生了变化。其实很简答，这个函数的作用就是：如果两次的数据不相同的话，告诉数据源该行为数据发生了变化。&lt;br&gt;现在我们已经设置好初始状态了，而且我们的数据检索方法已经能够通过搜索结果来成功地设置数据源的内容行了。以后如果获取到新数据，就能够通过修改数据源来改变内容行的显示了。&lt;/p&gt;
&lt;h3 id=&quot;创建ListView组件&quot;&gt;&lt;a href=&quot;#创建ListView组件&quot; class=&quot;headerlink&quot; title=&quot;创建ListView组件&quot;&gt;&lt;/a&gt;创建ListView组件&lt;/h3&gt;&lt;p&gt;现在，我们需要创建列表视图来显示已经加载的数据源结果。通过在render 方法中添加一个组件来实现这个效果：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//渲染UI&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;render&lt;/span&gt;&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  var content;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (this.state.dataSource.getRowCount() === 0) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    content =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          Please enter a search term to see results.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;/Text&amp;gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    content =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;ListView&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ref=&lt;span class=&quot;string&quot;&gt;&quot;listView&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            dataSource=&amp;#123;this.state.dataSource&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            renderRow=&amp;#123;this.renderRow&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            automaticallyAdjustContentInsets=&amp;#123;&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            keyboardDismissMode=&lt;span class=&quot;string&quot;&gt;&quot;onDrag&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            keyboardShouldPersistTaps=&amp;#123;&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&amp;#125;/&amp;gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;View style=&amp;#123;styles.container&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;TextInput&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       autoCapitalize=&lt;span class=&quot;string&quot;&gt;&quot;none&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       autoCorrect=&amp;#123;&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       placeholder=&lt;span class=&quot;string&quot;&gt;&quot;Search for a project...&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       style=&amp;#123;styles.searchBarInput&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       onEndEditing=&amp;#123;this.onSearchChange&amp;#125;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#123;content&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;创建每个数据单元&quot;&gt;&lt;a href=&quot;#创建每个数据单元&quot; class=&quot;headerlink&quot; title=&quot;创建每个数据单元&quot;&gt;&lt;/a&gt;创建每个数据单元&lt;/h3&gt;&lt;p&gt;现在我们要渲染每一条结果数据了。我们来实现一个方法，通过this.renderRow来完成方法的绑定，从而达到渲染数据的效果。方法的实现如下：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;renderRow: &lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(repo: Object) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;View style=&amp;#123;styles.row&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &amp;#123;repo.name&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;View style=&amp;#123;styles.cellBorder&amp;#125; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在这里，我们创建了一个基本的结果条目，用来显示搜索结果中的名称。我们给styles增加两个样式规则，row和cellBorder，用来渲染这个结果条目。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;row: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  alignItems: &lt;span class=&quot;string&quot;&gt;&#39;center&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  backgroundColor: &lt;span class=&quot;string&quot;&gt;&#39;white&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  flexDirection: &lt;span class=&quot;string&quot;&gt;&#39;row&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  padding: 5,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cellBorder: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  backgroundColor: &lt;span class=&quot;string&quot;&gt;&#39;rgba(0, 0, 0, 0.1)&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  height: 1,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  marginLeft: 4,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;未完，待续。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;在React-Native中创建“Hello-World”程序&quot;&gt;&lt;a href=&quot;#在React-Native中创建“Hello-World”程序&quot; class=&quot;headerlink&quot; title=&quot;在React Native中创建“Hello World”程
    
    </summary>
    
    
      <category term="Native" scheme="http://yoursite.com/tags/Native/"/>
    
      <category term="React Native" scheme="http://yoursite.com/tags/React-Native/"/>
    
  </entry>
  
  <entry>
    <title>CocoaPods无法使用，更新遇到的一些问题</title>
    <link href="http://yoursite.com/2016/05/13/CocoaPods%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8%EF%BC%8C%E6%9B%B4%E6%96%B0%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2016/05/13/CocoaPods无法使用，更新遇到的一些问题/</id>
    <published>2016-05-13T11:27:34.000Z</published>
    <updated>2016-06-22T02:59:37.000Z</updated>
    
    <content type="html">&lt;p&gt;问题描述执行gem sources -remove &lt;a href=&quot;https://ruby.taobao.org/,提示&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://ruby.taobao.org/,提示&lt;/a&gt;&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt; emove not present &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; cache&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;解决办法，执行&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gem sources --remove https://ruby.taobao.org/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在更新Cocoapods时遇到的一些问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;问题1：You don’t have write permissions for the /Library/Ruby/Gems/2.0.0 directory.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;目录权限不够，解决方案&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo chmod 777 /Library/Ruby/Gems/2.0.0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;问题2：Permission denied - /Library/Ruby/Gems/2.0.0/cache/rubygems-update-2.6.4.gem&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;gem版本较低，更新gem&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gem update --system&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;问题3：更新后还是不行，执行&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo gem install cocoapods&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;问题4：Operation not permitted - /usr/bin/xcodeproj&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;解决方案，&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo gem install -n /usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/bin cocoapods&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;问题5：pod install 时，提示[!] The dependency &lt;code&gt;AFNetworking (= 2.5.0)&lt;/code&gt; is not used in any concrete target.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;解决方案，官方给出这样的格式来更新加载第三方&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;platform :ios, &lt;span class=&quot;string&quot;&gt;&#39;8.0&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;use_frameworks!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;target &lt;span class=&quot;string&quot;&gt;&#39;MyApp&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  pod &lt;span class=&quot;string&quot;&gt;&#39;AFNetworking&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;~&amp;gt; 2.6&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  pod &lt;span class=&quot;string&quot;&gt;&#39;ORStackView&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;~&amp;gt; 3.0&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  pod &lt;span class=&quot;string&quot;&gt;&#39;SwiftyJSON&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;~&amp;gt; 2.3&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;end&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;问题描述执行gem sources -remove &lt;a href=&quot;https://ruby.taobao.org/,提示&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://ruby.taobao.org/,提示&lt;/a&gt;&lt;br&gt;&lt;figure
    
    </summary>
    
    
      <category term="CocoaPods问题" scheme="http://yoursite.com/tags/CocoaPods%E9%97%AE%E9%A2%98/"/>
    
      <category term="CocoaPods" scheme="http://yoursite.com/tags/CocoaPods/"/>
    
  </entry>
  
  <entry>
    <title>真机调试，代码签名证书不对（问题2）</title>
    <link href="http://yoursite.com/2016/04/25/%E7%9C%9F%E6%9C%BA%E8%B0%83%E8%AF%95%EF%BC%8C%E4%BB%A3%E7%A0%81%E7%AD%BE%E5%90%8D%E8%AF%81%E4%B9%A6%E4%B8%8D%E5%AF%B9%EF%BC%88%E9%97%AE%E9%A2%982%EF%BC%89/"/>
    <id>http://yoursite.com/2016/04/25/真机调试，代码签名证书不对（问题2）/</id>
    <published>2016-04-25T03:21:47.000Z</published>
    <updated>2016-06-22T03:25:17.000Z</updated>
    
    <content type="html">&lt;p&gt;真机调试的时候往往会出现这样一个错误，”This application’s application-identifier entitlement does not match that of the installed application. These values must match for an upgrade to be allowed.”，就是说代码签名证书不对劲。&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1290061-0b046e6fb1cf0def.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;问题2.png&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;解决方案，&quot;&gt;&lt;a href=&quot;#解决方案，&quot; class=&quot;headerlink&quot; title=&quot;解决方案，&quot;&gt;&lt;/a&gt;解决方案，&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;选择工程－&amp;gt;Build Settings -&amp;gt; Code Signing -&amp;gt; Code Signing Identity -&amp;gt; Debug -&amp;gt; Any iOS SDK 将选项改为：iOS Developer;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;“command”＋“，”退出登录的Apple  IDs，然后Clean工程重新登录Apple IDS ，再Build工程；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果还不行，重新配置证书，倒入描述文件，及证书等。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;真机调试的时候往往会出现这样一个错误，”This application’s application-identifier entitlement does not match that of the installed application. These values 
    
    </summary>
    
    
      <category term="真机调试问题" scheme="http://yoursite.com/tags/%E7%9C%9F%E6%9C%BA%E8%B0%83%E8%AF%95%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>CocoaPods最新问题</title>
    <link href="http://yoursite.com/2016/04/22/CocoaPods%E6%9C%80%E6%96%B0%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2016/04/22/CocoaPods最新问题/</id>
    <published>2016-04-22T03:28:09.000Z</published>
    <updated>2016-06-22T03:30:37.000Z</updated>
    
    <content type="html">&lt;p&gt;今天创建项目时，兴奋的使用CocoaPods导入第三方框架，Shit！pod search 根本没有反应！想到是否gem版本低需要升级，于是便&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;laoniede-MacBook-Pro:~ xuxianmei$ sudo gem update -system&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ERROR:  While executing gem ... (OptionParser::AmbiguousOption)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ambiguous option: -system&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;laoniede-MacBook-Pro:~ xuxianmei$&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;只能fuck了！Google后发现有人说镜像改成了&lt;a href=&quot;https://gems.ruby-china.rog/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://gems.ruby-china.rog/&lt;/a&gt; ，所以把镜像换了重新安转了下Cocoapods。安转中….等待安装结果中。&lt;/p&gt;
&lt;p&gt;亲测，安装成功后，可以使用。一些同事用的是ruby.taobo.org/镜像，可以正常使用，为什么镜像换成gems.ruby-china.org/还没有找到原因。&lt;/p&gt;
&lt;p&gt;原因可能是因为系统升级10.11，可尝试&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo gem install -n /user/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/bin cocoapods&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;未亲测，遇到提示od:command not found 可以尝试下。&lt;br&gt;如果pod update / pod install卡在Updating local specs repositories,可执行&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pod install --verbose --no-repo-update&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;结束。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;今天创建项目时，兴奋的使用CocoaPods导入第三方框架，Shit！pod search 根本没有反应！想到是否gem版本低需要升级，于是便&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pr
    
    </summary>
    
    
      <category term="CocoaPods问题" scheme="http://yoursite.com/tags/CocoaPods%E9%97%AE%E9%A2%98/"/>
    
      <category term="CocoaPods" scheme="http://yoursite.com/tags/CocoaPods/"/>
    
  </entry>
  
  <entry>
    <title>CocoaPods安装</title>
    <link href="http://yoursite.com/2016/04/20/CocoaPods%E5%AE%89%E8%A3%85/"/>
    <id>http://yoursite.com/2016/04/20/CocoaPods安装/</id>
    <published>2016-04-20T03:31:38.000Z</published>
    <updated>2016-06-22T03:38:23.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1290061-879b1ca32c1c393d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;工具.jpg&quot;&gt;&lt;br&gt;为了在开发中更好的管理第三方库文件而生！CocoaPods能帮助在项目开发迭代中，让第三方库文件更新变的更加简单！&lt;/p&gt;
&lt;h3 id=&quot;安装CocoPods&quot;&gt;&lt;a href=&quot;#安装CocoPods&quot; class=&quot;headerlink&quot; title=&quot;安装CocoPods&quot;&gt;&lt;/a&gt;安装CocoPods&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;移除ruby的源地址&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gem sources –remove https://rubygems.org/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查看ruby的原地址&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gem sources &lt;span class=&quot;_&quot;&gt;-a&lt;/span&gt; https://ruby.taobao.org/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查看ruby的源地址：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gem sources &lt;span class=&quot;_&quot;&gt;-l&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装CocoaPods&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo gem install cocoapods&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果提示gem版本过低，需要升级gem&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo gem update -system 或 sudo gem install cocoapods&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;测试CocoaPods安装是否成功&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pod search afnetworking&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用CocoaPods倒入第三方库文件导入我们的工程中，你会发现一切都是多么的不可思议！&lt;/p&gt;
&lt;h3 id=&quot;使用CocoaPods：&quot;&gt;&lt;a href=&quot;#使用CocoaPods：&quot; class=&quot;headerlink&quot; title=&quot;使用CocoaPods：&quot;&gt;&lt;/a&gt;使用CocoaPods：&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;使用命令行cd进入以创建好的工程目录中&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt;／你的工程目录&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;创建名为Podfile的文件&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vim Podfile&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在Podfile中写入你想要添加的第三方类库，可以使用pod search＊去搜索你想要的第三方类库&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pod ‘JSONKit’，‘~&amp;gt;1.5pre’&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;保存Podfile文件，并推出（按Esc键之后保存退出）&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;：wq&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装第三方类库&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pod install 或pod install –verbose –no-repo-update 或pod update –verbose –no-repo-update&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果pod install长时间无响应，尝试第2种或第3种，原因是执行pod install或pod update命令时回升级CocoaPods的spec 仓库，加上参数会省略升级，很提高很快的速度。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1290061-879b1ca32c1c393d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; 
    
    </summary>
    
    
      <category term="CocoaPods" scheme="http://yoursite.com/tags/CocoaPods/"/>
    
  </entry>
  
  <entry>
    <title>安装React Native</title>
    <link href="http://yoursite.com/2016/04/07/%E5%AE%89%E8%A3%85ReactNative/"/>
    <id>http://yoursite.com/2016/04/07/安装ReactNative/</id>
    <published>2016-04-07T11:21:06.000Z</published>
    <updated>2016-06-22T02:50:40.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;安装React-Native&quot;&gt;&lt;a href=&quot;#安装React-Native&quot; class=&quot;headerlink&quot; title=&quot;安装React Native&quot;&gt;&lt;/a&gt;安装React Native&lt;/h2&gt;&lt;p&gt;配置环境要求：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OS X：目前只有OS X中能够安转使用iOS的开发环境，并且Xcode 也只能运行在Mac上。&lt;/li&gt;
&lt;li&gt;最新版的Xcode开发工具：在Mac的App Store上下载就可以；&lt;/li&gt;
&lt;li&gt;推荐使用Homebrew来安转node，watchman和flow；&lt;/li&gt;
&lt;li&gt;使用命令行brew install node来安装node；&lt;/li&gt;
&lt;li&gt;使用命令行brew install - - HEAD watchman来安装watchman。我们推荐安装watchman，否者你可能会需要一个node文件来监控开发中的bug。&lt;/li&gt;
&lt;li&gt;使用命令行brew install flow,如果你要使用flow的话。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;快速开始&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用命令行npm install -g react-native-cli;&lt;/li&gt;
&lt;li&gt;使用命令行react0-native init AwesomeProject；&lt;/li&gt;
&lt;li&gt;使用命令行cd AwesomeProject。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在创建的文件夹AWesomeProject中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用Xcode打开AWesomeProject.xcodeproj文件并运行项目；&lt;/li&gt;
&lt;li&gt;用你常用的文件编辑器打开index.ios.js文件，选中几行修改下代码；&lt;/li&gt;
&lt;li&gt;在Xcode中打开iOS模拟器，按下组合键Cmd＋R（两次）重新加载应用，来观察修改的效果。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;恭喜你！你刚刚已经成功地修改并运行了你的第一个React Native应用。&lt;/p&gt;
&lt;h2 id=&quot;在已有的iOS应用中集成React-Native。&quot;&gt;&lt;a href=&quot;#在已有的iOS应用中集成React-Native。&quot; class=&quot;headerlink&quot; title=&quot;在已有的iOS应用中集成React Native。&quot;&gt;&lt;/a&gt;在已有的iOS应用中集成React Native。&lt;/h2&gt;&lt;p&gt;在一个已经存在的App中集成React Native的内容，需要先安装React Native。不同于之前的安装方式，需要通过CocoPods来安转。CocoPods是用于iOS/Mac开发的一个包管理工具。在下啊面的三种应用场景下，你可以考虑在项目使用CocoaPods。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;你想要将第三方库（第三方库使用了CocoPods）整合到新创建的React Native项目中；&lt;/li&gt;
&lt;li&gt;目前你的项目使用CocoaPods来管理依赖和库；&lt;/li&gt;
&lt;li&gt;你想要将React Native框架添加到一个现有的项目中。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果你还没有安装CocoaPods，运行下面这个来安装：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo gem install cocoapods&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;注意，你需要提前安转Ruby来使用gem命令。&lt;br&gt;根据React Native官网最新的说明，它用io.js来取代了node.js。让我们按照官网的指导来进行io.js的安装和配置。如果之前安装过node.js，则先运行命令：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;brew unlink node&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这样可以完成node的解绑。然后运行：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;brew install iojs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;brew link iojs - -force&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;进行io.js的安装和配置。&lt;br&gt;现在我们已经准备好使用CocoaPods了，使用CocoaPods来安装React Native吧。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;进入到所见iOS应用的文件目录，建立一个文件，命名为Podfile。在使用CocoaPods安装React Native时，Podfile相当于一个配置文件，它告诉安装程序需要下载安装哪些内容。&lt;/li&gt;
&lt;li&gt;在Podfile中添加如下的内容。&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pod &lt;span class=&quot;string&quot;&gt;&#39;React&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pod &lt;span class=&quot;string&quot;&gt;&#39;React/RCTText&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;然后在终端执行一下命令：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pod install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;至此，你已经成功安装了React Native。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安装React-Native&quot;&gt;&lt;a href=&quot;#安装React-Native&quot; class=&quot;headerlink&quot; title=&quot;安装React Native&quot;&gt;&lt;/a&gt;安装React Native&lt;/h2&gt;&lt;p&gt;配置环境要求：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;O
    
    </summary>
    
    
      <category term="Native" scheme="http://yoursite.com/tags/Native/"/>
    
      <category term="React" scheme="http://yoursite.com/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>真机调试，代码签名证书不对（问题1）</title>
    <link href="http://yoursite.com/2016/03/31/%E7%9C%9F%E6%9C%BA%E8%B0%83%E8%AF%95%EF%BC%8C%E4%BB%A3%E7%A0%81%E7%AD%BE%E5%90%8D%E8%AF%81%E4%B9%A6%E4%B8%8D%E5%AF%B9%EF%BC%88%E9%97%AE%E9%A2%981%EF%BC%89/"/>
    <id>http://yoursite.com/2016/03/31/真机调试，代码签名证书不对（问题1）/</id>
    <published>2016-03-31T03:39:46.000Z</published>
    <updated>2016-06-22T03:42:01.000Z</updated>
    
    <content type="html">&lt;p&gt;真机调试的时候往往会出现这样一个错误，CodeSign error: code signing is required for product type ‘Application’ in SDK ‘iOS 9.2’，就是说代码签名证书不对劲。&lt;/p&gt;
&lt;h4 id=&quot;解决方案，&quot;&gt;&lt;a href=&quot;#解决方案，&quot; class=&quot;headerlink&quot; title=&quot;解决方案，&quot;&gt;&lt;/a&gt;解决方案，&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;选择工程－&amp;gt;Build Settings -&amp;gt; Code Signing -&amp;gt; Code Signing Identity -&amp;gt; Debug -&amp;gt; Any iOS SDK 将选项改为：iOS Developer;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;“command”＋“，”退出登录的Apple  IDs，然后Clean工程重新登录Apple IDS ，再Build工程；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果还不行，重新配置证书，倒入描述文件，及证书等。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;真机调试的时候往往会出现这样一个错误，CodeSign error: code signing is required for product type ‘Application’ in SDK ‘iOS 9.2’，就是说代码签名证书不对劲。&lt;/p&gt;
&lt;h4 id=&quot;解决方
    
    </summary>
    
    
      <category term="真机调试问题" scheme="http://yoursite.com/tags/%E7%9C%9F%E6%9C%BA%E8%B0%83%E8%AF%95%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>iOS开发－动态库加载（实时模块更新）</title>
    <link href="http://yoursite.com/2016/03/22/iOS%E5%BC%80%E5%8F%91%EF%BC%8D%E5%8A%A8%E6%80%81%E5%BA%93%E5%8A%A0%E8%BD%BD%EF%BC%88%E5%AE%9E%E6%97%B6%E6%A8%A1%E5%9D%97%E6%9B%B4%E6%96%B0%EF%BC%89/"/>
    <id>http://yoursite.com/2016/03/22/iOS开发－动态库加载（实时模块更新）/</id>
    <published>2016-03-22T03:47:56.000Z</published>
    <updated>2016-06-22T06:55:59.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;动态库和静态库&quot;&gt;&lt;a href=&quot;#动态库和静态库&quot; class=&quot;headerlink&quot; title=&quot;动态库和静态库&quot;&gt;&lt;/a&gt;动态库和静态库&lt;/h2&gt;&lt;p&gt;静态库和动态库是相对编译期和运行期:静态库在程序编译时会被链接到目标代码中，程序运行时将不再需要改静态库；而动态库在程序编译时并不会被链接到目标代码中，只是在程序运行时才被载入，因为在程序运行期间需要动态库的存在。&lt;/p&gt;
&lt;h3 id=&quot;静态库的好处&quot;&gt;&lt;a href=&quot;#静态库的好处&quot; class=&quot;headerlink&quot; title=&quot;静态库的好处&quot;&gt;&lt;/a&gt;静态库的好处&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;模块化，分工合作，提高了代码的复用及核心技术的保密程度；&lt;/li&gt;
&lt;li&gt;避免少量改动经常导致大量的重复编译链接；&lt;/li&gt;
&lt;li&gt;也可以重用，注意不是专享使用。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;动态库的好处&quot;&gt;&lt;a href=&quot;#动态库的好处&quot; class=&quot;headerlink&quot; title=&quot;动态库的好处&quot;&gt;&lt;/a&gt;动态库的好处&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;可以将最终可执行文件体积缩小，将整个应用程序分模块，团队合作，将进行分工，影响比较小；&lt;/li&gt;
&lt;li&gt;多个应用程序共享内存中得同一份库文件，节省资源；&lt;/li&gt;
&lt;li&gt;可以不重新编译链接可执行文件程序的前提下，更新动态库文件达到更新应用程序的目的；&lt;/li&gt;
&lt;li&gt;应用插件化。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;软件版本实时模块升级&quot;&gt;&lt;a href=&quot;#软件版本实时模块升级&quot; class=&quot;headerlink&quot; title=&quot;软件版本实时模块升级&quot;&gt;&lt;/a&gt;软件版本实时模块升级&lt;/h3&gt;&lt;p&gt;共享执行可执行文件，在其他大部分平台上，动态库都可以用于不同应用间共享，这就大大节省了内存。从目前来看，iOS仍然不允许进程间共享动态库，己iOS上的动态库只能是私有的，因为我们仍然不能将动态库文件放置在除了自身沙盒以为的其他任何地方。不过iOS8上开发了App Extension功能，可以为一个应用创建插件，这样主app和插件之间共享动态库还是可以行的。&lt;/p&gt;
&lt;h2 id=&quot;动态库和主工程的创建&quot;&gt;&lt;a href=&quot;#动态库和主工程的创建&quot; class=&quot;headerlink&quot; title=&quot;动态库和主工程的创建&quot;&gt;&lt;/a&gt;动态库和主工程的创建&lt;/h2&gt;&lt;p&gt;本文章只针对动态库创建，软件版本实时模块升级进行说明，静态库不做详细解释说明。&lt;/p&gt;
&lt;h3 id=&quot;动态库创建&quot;&gt;&lt;a href=&quot;#动态库创建&quot; class=&quot;headerlink&quot; title=&quot;动态库创建&quot;&gt;&lt;/a&gt;动态库创建&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;创建工程类型为Framework &amp;amp; Library 下的Cocoa Touch Framework工程，工程命名DynamicLink;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;创建继承UIViewController命名为ViewController的控制器，设置背景颜色；&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 动态库视图颜色&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;self.view.backgroundColor = [UIColor greenColor];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;创建继承NSObject命名为DynamicOpenMenth文件，在DynamicOpenMenth.h中&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 动态链对外开发方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; - (void)startWithObject:(id)object withBundle:(NSBundle *)bundle;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在DynamicOpenMenth.m中方法实现&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (void)startWithObject:(id)object withBundle:(NSBundle *)bundle&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     初始化第一个controller&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     这里的重点是资源文件的加载,通常我们在初始化的时候并不是很在意bundle:这个参数，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     其实我们所用到的图片、xib等资源文件都是在程序内部中获取的，也就是我们常用的[NSBundle mainBundle]中获取，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     所谓的NSBundle本质上就是一个路径，mainBundle指向的是.app下。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     而如果我们不指定bundle，则会默认从.app路径下去寻找资源。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     不过很显然，我们的动态库是放到“主程序”的document文件下的，所以资源文件是不可能在[NSbundle mainBundle]中获取到的，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     所以这里我们需要指定bundle参数，这也是传递framework的路径的意义所在&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ViewController *vc = [[ViewController alloc] init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  vc.root_bundle = bundle;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  //转换传递过来的mainCon参数，实现界面跳转&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  UIViewController *viewCon = (UIViewController *)object;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [viewCon presentViewController:vc animated:YES completion:^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      NSLog(@&lt;span class=&quot;string&quot;&gt;&quot;跳转到动态更新模块成功!&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在Build Only Device下编译程序，生成DynamicLink.Framework文件，文件可在工程目录下Products文件夹下Show In Finder中找到；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;主工程创建&quot;&gt;&lt;a href=&quot;#主工程创建&quot; class=&quot;headerlink&quot; title=&quot;主工程创建&quot;&gt;&lt;/a&gt;主工程创建&lt;/h3&gt;&lt;p&gt;创建Single View Application的工程，命名为DynamicLibrary。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在ViewController.m中实现以下方法&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (void)touchesBegan:(NSSet&amp;lt;UITouch *&amp;gt; *)touches withEvent:(UIEvent *)event&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  // 动态库测试&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [self performSelector:@selector(dynamicLibraryClick) withObject:nil];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)dynamicLibraryClick&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  // document路径&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  NSArray* paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory,NSUserDomainMask,YES);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  NSString *documentDirectory = nil;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([paths count] != 0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      documentDirectory = [paths objectAtIndex:0];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  NSLog(@&lt;span class=&quot;string&quot;&gt;&quot;\nDocuments 路径 = %@\n&quot;&lt;/span&gt;,documentDirectory);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  //拼接我们放到document中的framework路径&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  NSString *libName = @&lt;span class=&quot;string&quot;&gt;&quot;DynamicLink.framework&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  NSString *destLibPath = [documentDirectory stringByAppendingPathComponent:libName];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  //判断一下有没有这个文件的存在　如果没有直接跳出&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  NSFileManager *manager = [NSFileManager defaultManager];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (![manager fileExistsAtPath:destLibPath]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      NSLog(@&lt;span class=&quot;string&quot;&gt;&quot;There isn&#39;t have the file&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  //复制到程序中&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  NSError *error = nil;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  //加载方式二：使用NSBundle加载动态库&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  NSBundle *frameworkBundle = [NSBundle bundleWithPath:destLibPath];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (frameworkBundle) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      NSLog(@&lt;span class=&quot;string&quot;&gt;&quot;bundle load framework success.&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      NSLog(@&lt;span class=&quot;string&quot;&gt;&quot;bundle load framework err:%@&quot;&lt;/span&gt;,error);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  //通过NSClassFromString方式读取类,FrameWorkStart为动态库中入口类&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Class pacteraClass = NSClassFromString(@&lt;span class=&quot;string&quot;&gt;&quot;DynamicOpenMenth&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!pacteraClass) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      NSLog(@&lt;span class=&quot;string&quot;&gt;&quot;Unable to get TestDylib class&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  // 1.初始化方式采用下面的形式,alloc　init的形式是行不通的,同样，直接使用PacteraFramework类初始化也是不正确的&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  // 2.通过- (id)performSelector:(SEL)aSelector withObject:(id)object1 withObject:(id)object2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  // 3.方法调用入口方法（startWithObject:withBundle:），并传递参数（withObject:self withObject:frameworkBundle）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  NSObject *pacteraObject = [pacteraClass new];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [pacteraObject performSelector:@selector(startWithObject:withBundle:) withObject:self withObject:frameworkBundle];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;将动态库生成的DynamicLibrary.Framework动态库文件导入到主工程运行下的Documents文件下；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;注意：模拟器运行下，直接讲DynamicLibrary.Framework动态库文件拖拽到打印出的文件夹中即可，真机运行需打开iTunes倒入到DynamicLibrary应用中。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以上为动态库加载主要实现，存在一些的问题需要感兴趣的朋友一起讨论，比如 &lt;code&gt;Class pacteraClass = NSClassFromString(@&amp;quot;DynamicOpenMenth&amp;quot;);&lt;/code&gt;读取类的时候为什么值为nil等。&lt;/p&gt;
&lt;p&gt;目前可以肯定动态库达不到更新效果！了解到JSPatch，可以实时修复iOS线上问题。但JSPatch也有个缺点，不能实现大规模功能模块更新。&lt;/p&gt;
&lt;p&gt;技术交流群：193996724&lt;/p&gt;
&lt;p&gt;推广iOS开发－Git 命令的简单操作：&lt;a href=&quot;http://www.jianshu.com/p/8c5483fa707a&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.jianshu.com/p/8c5483fa707a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本文Demo下载地址：&lt;a href=&quot;https://github.com/nfl404/iOS_Dynamic_Plug-in&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/nfl404/iOS_Dynamic_Plug-in&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;动态库和静态库&quot;&gt;&lt;a href=&quot;#动态库和静态库&quot; class=&quot;headerlink&quot; title=&quot;动态库和静态库&quot;&gt;&lt;/a&gt;动态库和静态库&lt;/h2&gt;&lt;p&gt;静态库和动态库是相对编译期和运行期:静态库在程序编译时会被链接到目标代码中，程序运行时将不再需要改静
    
    </summary>
    
    
      <category term="Hybrid" scheme="http://yoursite.com/tags/Hybrid/"/>
    
      <category term="动态库加载" scheme="http://yoursite.com/tags/%E5%8A%A8%E6%80%81%E5%BA%93%E5%8A%A0%E8%BD%BD/"/>
    
      <category term="JSPath" scheme="http://yoursite.com/tags/JSPath/"/>
    
  </entry>
  
  <entry>
    <title>iOS开发－基础框架</title>
    <link href="http://yoursite.com/2016/03/17/iOS%E5%BC%80%E5%8F%91%EF%BC%8D%E5%9F%BA%E7%A1%80%E6%A1%86%E6%9E%B6/"/>
    <id>http://yoursite.com/2016/03/17/iOS开发－基础框架/</id>
    <published>2016-03-17T06:56:26.000Z</published>
    <updated>2016-06-22T06:59:38.000Z</updated>
    
    <content type="html">&lt;p&gt;本基础框架主要包括UITabBarController，UINavigationController和UIBarButtonItem类的扩展。主要解决子视图创建过多，封装带有UINavigationController的子视图创建，然后添加到UITabBarController的ChildViewController视图中。针对UITabBarController的UITabBarItem的字体大小，颜色设置。废话不多说，上代码。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一.继承UITabBarController创建的NPTabBarController&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;1.设置tabbar上面的字体样式&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#pragma mark - 设置tabbar上面的字 setTitleTextAttributes&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    - (void)&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;TabBarTitleAttributesStyle&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        NSMutableDictionary *attrs = [NSMutableDictionary dictionary];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //通常字体大小&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        attrs[NSFontAttributeName] = [UIFont systemFontOfSize:16];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //通常字体颜色&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        attrs[NSForegroundColorAttributeName] = [UIColor lightGrayColor];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        NSMutableDictionary *selectAttrs = [NSMutableDictionary dictionary];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //选中字体大小&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        selectAttrs[NSFontAttributeName] = [UIFont systemFontOfSize:16];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //选中字体颜色&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        selectAttrs[NSForegroundColorAttributeName] = [UIColor darkGrayColor];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //UI_APPEARANCE_SELECTOR 外观&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        UITabBarItem *item = [UITabBarItem appearance];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //tabbar通常字体样式&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [item &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;TitleTextAttributes:attrs &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;State:UIControlStateNormal];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //tabbar选中字体样式&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [item &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;TitleTextAttributes:selectAttrs &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;State:UIControlStateSelected];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.导航子视图封装&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#pragma mark - 导航子视图封装
- (void)setChildVC:(UIViewController *)ChildVC title:(NSString *)title image:(NSString *)image selectImgage:(NSString *)selectImage {

    //注意视图层级关系，最上边时UINavigationController，创建一个视图即给一个UINavigationController
    NPNavigationController *nav = [[NPNavigationController alloc] initWithRootViewController:ChildVC];
    //子视图显示在UITabbarController上显示的tabbar标题
    nav.tabBarItem.title = title;
    //子视图显示在UITabbarController上未选中tabbar的图片
    nav.tabBarItem.image = [UIImage imageNamed:image];
    //子视图显示在UITabbarController上选中tabbar的图片
    nav.tabBarItem.selectedImage = [UIImage imageNamed:selectImage];
    //子视图背景颜色
    nav.view.backgroundColor = [UIColor grayColor];
    //注意标题显示是子视图的标题，非UINavigationController
    ChildVC.navigationItem.title = title;
    //添加子视图
    [self addChildViewController:nav];

}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;二.继承UINavigationController创建NPNavigationController&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;1.重写-(void)pushVewController:(UIViewConntroller*)viewCOntroller animated:(Bool)animated方法&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (void)pushViewController:(UIViewController *)viewController animated:(BOOL)animated&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //判断self.childViewControllers是不是拿到所有子控制器，self.childViewControllers.count为0时，只有子控制器，干掉返回按钮&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (self.childViewControllers.count &amp;gt; 0) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            //自定义返回按钮&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            UIButton *&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt;Btn = [UIButton buttonWithType:UIButtonTypeCustom];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            //设置title:返回&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt;Btn &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;Title:@&lt;span class=&quot;string&quot;&gt;&quot;返回&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;State:UIControlStateNormal];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            //正常下image&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt;Btn &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;Image:[UIImage imageNamed:@&lt;span class=&quot;string&quot;&gt;&quot;black&quot;&lt;/span&gt;] &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;State:UIControlStateNormal];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            //高亮下image&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt;Btn &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;Image:[UIImage imageNamed:@&lt;span class=&quot;string&quot;&gt;&quot;grat&quot;&lt;/span&gt;] &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;State:UIControlStateHighlighted];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            //正常下title颜色&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt;Btn &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;TitleColor:[UIColor blackColor] &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;State:UIControlStateNormal];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            //高亮下title颜色&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt;Btn &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;TitleColor:[UIColor lightGrayColor] &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;State:UIControlStateHighlighted];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            //设置按钮位置大小,注意这里位置无效果&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt;Btn &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;Frame:CGRectMake(0, 0, 70, 20)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            //按钮内部对齐&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt;Btn &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;ContentHorizontalAlignment:UIControlContentHorizontalAlignmentLeft];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            //设置图片内部位置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt;Btn &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;ContentEdgeInsets:UIEdgeInsetsMake(0, 0, 0, 0)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            //添加点击事件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt;Btn addTarget:self action:@selector(&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt;BtnClick) &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;ControlEvents:UIControlEventTouchUpInside];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            //当视图推送时隐藏tabbar&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            viewController.hidesBottomBarWhenPushed = YES;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            //自定义push视图的leftBarButtonItem&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            viewController.navigationItem.leftBarButtonItem = [[UIBarButtonItem alloc] initWithCustomView:&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt;Btn];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //子控制器通过这个方法推送视图&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [super pushViewController:viewController animated:animated];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;三.添加UIBarButtonItem的类扩展UIBarButtonItem＋NPBarbutton,创建UIbarbuttonItem类方法&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;1.UIbarbuttonItem类方法&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *创建一个UIBarbuttonItem 类方法，这个方法是类方法创建一个按钮，传入的参数：image正常显示的图片，hightImage高亮情况下显示的图片，target用的对象，action点击的行为。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    + (instancetype)itemWithImage:(NSString *)image hightImage:(NSString *)hightImage target:(id)target action:(SEL)action&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        UIButton *btn = [UIButton buttonWithType:UIButtonTypeCustom];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [btn &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;BackgroundImage:[UIImage imageNamed:image] &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;State:UIControlStateNormal];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [btn &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;BackgroundImage:[UIImage imageNamed:hightImage] &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;State:UIControlStateNormal];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //btnsize 是北京图片的大小&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CGSize btnsize = btn.currentBackgroundImage.size;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //设置btn的frame&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [btn &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;Frame:CGRectMake(0, 0, btnsize.width, btnsize.height)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [btn addTarget:target action:action &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;ControlEvents:UIControlEventTouchUpInside];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; [[self alloc] initWithCustomView:btn];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;四.继承UIViewController创建NPUIViewController基类，添加滑动返回&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (void)viewDidDisappear:(BOOL)animated&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [super viewDidDisappear:animated];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //代理置空，否则会闪退&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([self.navigationController       respondsToSelector:@selector(interactivePopGestureRecognizer)]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.navigationController.interactivePopGestureRecognizer.delegate = nil;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)viewDidAppear:(BOOL)animated&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [super viewDidAppear:animated];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //开启iOS7的滑动返回效果&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([self.navigationController   respondsToSelector:@selector(interactivePopGestureRecognizer)]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //只有在二级页面生效&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([self.navigationController.viewControllers count] == 2) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            self.navigationController.interactivePopGestureRecognizer.delegate = (id)self;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;以上为基础框架主要实现。&lt;/p&gt;
&lt;p&gt;MarkDown语法链接：&lt;a href=&quot;http://www.jianshu.com/p/7cc9c26e8b7a&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.jianshu.com/p/7cc9c26e8b7a&lt;/a&gt;&lt;br&gt;OC Demo下载地址：&lt;a href=&quot;https://github.com/nfl404/iOS_Obj_BaseFrameWork&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/nfl404/iOS_Obj_BaseFrameWork&lt;/a&gt;&lt;br&gt;Swift Demo下在抵制：&lt;a href=&quot;https://github.com/nfl404/iOS_Swift_BaseFrameWork&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/nfl404/iOS_Swift_BaseFrameWork&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本基础框架主要包括UITabBarController，UINavigationController和UIBarButtonItem类的扩展。主要解决子视图创建过多，封装带有UINavigationController的子视图创建，然后添加到UITabBarControll
    
    </summary>
    
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
      <category term="基础框架" scheme="http://yoursite.com/tags/%E5%9F%BA%E7%A1%80%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>iOS开发－Git命令的简单操作</title>
    <link href="http://yoursite.com/2016/03/17/iOS%E5%BC%80%E5%8F%91%EF%BC%8DGit%E5%91%BD%E4%BB%A4%E7%9A%84%E7%AE%80%E5%8D%95%E6%93%8D%E4%BD%9C/"/>
    <id>http://yoursite.com/2016/03/17/iOS开发－Git命令的简单操作/</id>
    <published>2016-03-17T06:49:48.000Z</published>
    <updated>2016-06-22T09:04:14.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;git环境搭建&quot;&gt;&lt;a href=&quot;#git环境搭建&quot; class=&quot;headerlink&quot; title=&quot;git环境搭建&quot;&gt;&lt;/a&gt;git环境搭建&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;iOS 开发 git环境搭建，只需下载Xcode成功后git环境就搭建好了。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;git常用命令&quot;&gt;&lt;a href=&quot;#git常用命令&quot; class=&quot;headerlink&quot; title=&quot;git常用命令&quot;&gt;&lt;/a&gt;git常用命令&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;创建远程仓库&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git --bare&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;clone仓库&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;built_in&quot;&gt;clone&lt;/span&gt; 仓库地址&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;添加.gitignore&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;touch .gitignore&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查看状态&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git status&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查看分之&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git branch －a&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;切换master分之&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git checkout master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;添加修改内容&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git add .&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;提交修改内容&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git commit -m &lt;span class=&quot;string&quot;&gt;&quot;这里写提交内容的注释&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;拉取master主分支&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git pull origin master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;合并分支，如果你在master，想把dev分支&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git  merge dev&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;推送到master分支&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git push origin master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;创建dev分支&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git branch dev&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;提交本地dev分支作为远程的master分之&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git push origin dev:master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;更新远程分之道本地&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git fetch&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查看历史版本&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查看简化的历史版本&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git reflog&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;回退当前版本&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git  reset --hard 或 git reset --hard HEAD&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;回退到指定的版本&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git reset --hard 版本号前7位&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;git-不常用命令&quot;&gt;&lt;a href=&quot;#git-不常用命令&quot; class=&quot;headerlink&quot; title=&quot;git 不常用命令&quot;&gt;&lt;/a&gt;git 不常用命令&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;添加tag(解释下tag,给分之打上tag后,不能轻易改动)&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git tag &lt;span class=&quot;string&quot;&gt;&#39;1.0.0&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git push --tags&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;删除tag1.0.0&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git push origin :refs/tags/1.0.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;或者&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git tag &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; 1.0.0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;删除dev(dev是分支的名字)分支&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git push origin :dev&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;或者&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git branch -r &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; origin/dev&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;git-生成SSH-Key密钥&quot;&gt;&lt;a href=&quot;#git-生成SSH-Key密钥&quot; class=&quot;headerlink&quot; title=&quot;git 生成SSH Key密钥&quot;&gt;&lt;/a&gt;git 生成SSH Key密钥&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;配置Git的user name 和email&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git config -- global user.name &lt;span class=&quot;string&quot;&gt;&quot;nieplus&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git config -- global user.email &lt;span class=&quot;string&quot;&gt;&quot;nieplus@163.com&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查看是否有SSH密钥&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ~/.ssh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;生成SSH密钥&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;SSH-keygen - t rsa -C &lt;span class=&quot;string&quot;&gt;&quot;nieplus@163.com&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;添加密钥&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ssh-add 文件名&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果已有秘钥，查看&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cat ~/.ssh/id_rsa.pub&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;技术交流群：193996724&lt;/p&gt;
&lt;p&gt;推广iOS开发－动态库加载（实时模块更新）：&lt;a href=&quot;http://www.jianshu.com/p/dc07432a7f81&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.jianshu.com/p/dc07432a7f81&lt;/a&gt; 作者：NiePus&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;git环境搭建&quot;&gt;&lt;a href=&quot;#git环境搭建&quot; class=&quot;headerlink&quot; title=&quot;git环境搭建&quot;&gt;&lt;/a&gt;git环境搭建&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;iOS 开发 git环境搭建，只需下载Xcode成功后git环境就搭建好了。&lt;/li&gt;

    
    </summary>
    
    
      <category term="git命令" scheme="http://yoursite.com/tags/git%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Xcode7及iOS9更新遇到的一些问题</title>
    <link href="http://yoursite.com/2015/10/14/Xcode7%E5%8F%8AiOS9%E6%9B%B4%E6%96%B0%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2015/10/14/Xcode7及iOS9更新遇到的一些问题/</id>
    <published>2015-10-14T07:07:30.000Z</published>
    <updated>2016-07-01T07:17:52.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;问题1-Xcode7-网络请求报错&quot;&gt;&lt;a href=&quot;#问题1-Xcode7-网络请求报错&quot; class=&quot;headerlink&quot; title=&quot;问题1:Xcode7 网络请求报错&quot;&gt;&lt;/a&gt;问题1:Xcode7 网络请求报错&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;提示内容如下&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;span style=&lt;span class=&quot;string&quot;&gt;&quot;font-size:18px;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;The resource could not be loaded because the App Transport Security policy requires&amp;lt;/span&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;说明:&lt;br&gt;iOS9引入了新特性App Transport Security (ATS)。详情：&lt;a href=&quot;https://developer.apple.com/library/prerelease/ios/releasenotes/General/WhatsNewIniOS/Articles/iOS9.html#//apple_ref/doc/uid/TP40016198-DontLinkElementID_13&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;App Transport Security (ATS)&lt;/a&gt;&lt;br&gt;新特性要求App内访问的网络必须使用HTTPS协议。意思是Api接口以后必须是HTTPS&lt;br&gt;但是现在公司的项目使用的是HTTP协议，使用私有加密方式保证数据安全。现在也不能马上改成HTTPS协议传输。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;解决办法&lt;br&gt;在Info.plist中添加NSAppTransportSecurity类型Dictionary。&lt;br&gt;在NSAppTransportSecurity下添加NSAllowsArbitraryLoads类型Boolean,值设为YES&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;问题1-Xcode7-网络请求报错&quot;&gt;&lt;a href=&quot;#问题1-Xcode7-网络请求报错&quot; class=&quot;headerlink&quot; title=&quot;问题1:Xcode7 网络请求报错&quot;&gt;&lt;/a&gt;问题1:Xcode7 网络请求报错&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;提
    
    </summary>
    
    
      <category term="iOS9更新问题" scheme="http://yoursite.com/tags/iOS9%E6%9B%B4%E6%96%B0%E9%97%AE%E9%A2%98/"/>
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>苹果有四种开发帐号</title>
    <link href="http://yoursite.com/2015/08/09/%E8%8B%B9%E6%9E%9C%E6%9C%89%E5%9B%9B%E7%A7%8D%E5%BC%80%E5%8F%91%E5%B8%90%E5%8F%B7/"/>
    <id>http://yoursite.com/2015/08/09/苹果有四种开发帐号/</id>
    <published>2015-08-09T06:22:19.000Z</published>
    <updated>2016-07-01T06:48:25.000Z</updated>
    
    <content type="html">&lt;p&gt;苹果有四种开发帐号：&lt;/p&gt;
&lt;h3 id=&quot;个人帐号（Individual）&quot;&gt;&lt;a href=&quot;#个人帐号（Individual）&quot; class=&quot;headerlink&quot; title=&quot;个人帐号（Individual）&quot;&gt;&lt;/a&gt;个人帐号（Individual）&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;费用99美金一年, 该账号在App Store销售者只能显示个人的ID，比如yufeng zhang，单人使用。个人账号只能有一个开发者。100个苹果的iOS设备UDID测试；&lt;/li&gt;
&lt;li&gt;可以发布app store 应用，以公司名义；&lt;/li&gt;
&lt;li&gt;不可以增加子帐号。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;公司团队帐号（Company-Organization）&quot;&gt;&lt;a href=&quot;#公司团队帐号（Company-Organization）&quot; class=&quot;headerlink&quot; title=&quot;公司团队帐号（Company/Organization）&quot;&gt;&lt;/a&gt;公司团队帐号（Company/Organization）&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;费用99美金一年, 该账号在App Store销售者可以显示类似Studios，或者自定义的团队名称 ，比如Mamshare INC，公司账号可以允许多个开发者协作开发，比个人多一些帐号管理的设置，可以设置多个AppleID，分4种管理级别权限，详细见备注。100个苹果的iOS设备UDID测试。但是申请时需要填写公司的邓白氏编码（D-U-N-S）；&lt;/li&gt;
&lt;li&gt;可以发布app store 应用，以公司名义；&lt;/li&gt;
&lt;li&gt;可以增加子帐号。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;备注：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Admin Legal权限：超级管理员。可以管理开发者和管理app store中的应用；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Admin权限：管理员，可以管理开发者。添加测试机和管理团队证书；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Member权限：是普通开发者。只能下载证书和使用证书；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;No Access权限：没有相应的权限；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;申请公司团队账号地址：&lt;a href=&quot;https://developer.apple.com/programs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;点击我&lt;/a&gt; 查看详细流程；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;邓白氏编码（D-U-N-S）申请地址：&lt;a href=&quot;https://developer.apple.com/enroll/status/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;点击我&lt;/a&gt; 去申请。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;企业帐号-（Emterprise）&quot;&gt;&lt;a href=&quot;#企业帐号-（Emterprise）&quot; class=&quot;headerlink&quot; title=&quot;企业帐号 （Emterprise）&quot;&gt;&lt;/a&gt;企业帐号 （Emterprise）&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;费用299美金一年, 该账号开发应用不能发布到App Store，只能企业内部应用，苹果的iOS设备UDID数量不限制。企业账号适合不希望上线App Store，但是需要企业内部比如1000人的iOS设备都部署。公司测试部门需要全公司测试设备，突破100个UDID的限制；&lt;/li&gt;
&lt;li&gt;不可以发布app store 应用，以公司名义；&lt;/li&gt;
&lt;li&gt;可以发布任意版本应用，用户在手机safari浏览器中可以直接下载安装；&lt;/li&gt;
&lt;li&gt;可以增加子帐号。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;教育账号（University）&quot;&gt;&lt;a href=&quot;#教育账号（University）&quot; class=&quot;headerlink&quot; title=&quot;教育账号（University）&quot;&gt;&lt;/a&gt;教育账号（University）&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;费用0美元 ，只能教育机构或学院内部使用。必须是苹果iOS开发者计划授权机构。不能对外正式发布iOS应用程序。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;备注：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;申请地址：&lt;a href=&quot;https://developer.apple.com/education/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;点击我&lt;/a&gt; 去申请。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;一般公司会有团队账号和企业帐号两种账号，苹果还有两种权限：&quot;&gt;&lt;a href=&quot;#一般公司会有团队账号和企业帐号两种账号，苹果还有两种权限：&quot; class=&quot;headerlink&quot; title=&quot;一般公司会有团队账号和企业帐号两种账号，苹果还有两种权限：&quot;&gt;&lt;/a&gt;一般公司会有团队账号和企业帐号两种账号，苹果还有两种权限：&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;应用打包开发权限：&lt;a href=&quot;https://developer.apple.com/account/#/welcome&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;点击我&lt;/a&gt; 去添加；&lt;/li&gt;
&lt;li&gt;app store 应用发布权限：&lt;a href=&quot;https://itunesconnect.apple.com/WebObjects/iTunesConnect.woa/ra/ng/users_roles&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;点击我&lt;/a&gt; 去添加。&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;苹果有四种开发帐号：&lt;/p&gt;
&lt;h3 id=&quot;个人帐号（Individual）&quot;&gt;&lt;a href=&quot;#个人帐号（Individual）&quot; class=&quot;headerlink&quot; title=&quot;个人帐号（Individual）&quot;&gt;&lt;/a&gt;个人帐号（Individual）&lt;/h3
    
    </summary>
    
    
      <category term="开发账号" scheme="http://yoursite.com/tags/%E5%BC%80%E5%8F%91%E8%B4%A6%E5%8F%B7/"/>
    
  </entry>
  
  <entry>
    <title>字符串基本操作</title>
    <link href="http://yoursite.com/2014/08/14/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
    <id>http://yoursite.com/2014/08/14/字符串基本操作/</id>
    <published>2014-08-14T04:08:33.000Z</published>
    <updated>2016-07-01T04:11:09.000Z</updated>
    
    <content type="html">&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; ///字符串基本操作&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; // 1.初始化方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSString *str1 = [[NSStringalloc]initWithFormat:@&amp;quot;这是第%d个字符串&amp;quot;,1];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSLog(@&amp;quot;%@&amp;quot;, str1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSString *str2 =[[NSStringalloc]initWithString:str1];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSLog(@&amp;quot;%@&amp;quot;, str2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; // 2.便利构造器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSString *str3 = [NSStringstringWithFormat:@&amp;quot;这是第%d个字符串&amp;quot;,2];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSLog(@&amp;quot;%@&amp;quot;,str3);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSString *str4 = [NSStringstringWithString:str3];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSLog(@&amp;quot;%@&amp;quot;,str4);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; // 3. 获取字符串长度&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSLog(@&amp;quot;%ld&amp;quot;,[str2length]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; // 4.1 判断字符串是否包含某个前缀&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if ([str2hasPrefix:@&amp;quot;这是&amp;quot;]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSLog(@&amp;quot;%@包含前缀&amp;apos;这是&amp;apos;&amp;quot;,str2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if ([str2hasPrefix:@&amp;quot;这是第&amp;quot;]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSLog(@&amp;quot;%@包含前缀&amp;apos;这是第&amp;apos;&amp;quot;, str2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; // 4.2 判断字符串是否包含某个后缀&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if ([str2hasSuffix:@&amp;quot;符串&amp;quot;]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSLog(@&amp;quot;%@包含后缀&amp;apos;符串&amp;apos;&amp;quot;, str2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if ([str2hasSuffix:@&amp;quot;字符串&amp;quot;]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSLog(@&amp;quot;%@包含后缀&amp;apos;字符串&amp;apos;&amp;quot;, str2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; // 5. 判断子串在一个字符串中的范围&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSRange range = [str2rangeOfString:@&amp;quot;是第&amp;quot;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; NSLog(@&amp;quot;location: %lu length: %lu&amp;quot;, range.location, range.length);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; NSLog(@&amp;quot;%lu&amp;quot;,NSNotFound);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if (range.length ==0) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSLog(@&amp;quot;字符串不包含&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSLog(@&amp;quot;包含该字符串&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; // 6. 字符串截取&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; // 6.1 截取前面部分&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSLog(@&amp;quot;%@&amp;quot;, [str2substringToIndex:3]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; // 6.2 截取后边部分&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; NSLog(@&amp;quot;%@&amp;quot;, [str2substringFromIndex:3]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; // 6.3 截取中间部分&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSRange range3 =NSMakeRange(1,2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSLog(@&amp;quot;%@&amp;quot;, [str2substringWithRange:range3]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; //  7. 拼接字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; NSLog(@&amp;quot;%@&amp;quot;, [str1stringByAppendingString:str2]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; //  8. 替换字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; NSLog(@&amp;quot;%@&amp;quot;, [str1stringByReplacingOccurrencesOfString:@&amp;quot;是&amp;quot;withString:@&amp;quot;不是&amp;quot;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; //  9. 字符串比较&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if ([str1isEqualToString:str2]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSLog(@&amp;quot;两个字符串相同&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSLog(@&amp;quot;两个字符串不想同&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSLog(@&amp;quot;%ld&amp;quot;, [@&amp;quot;A&amp;quot;compare:@&amp;quot;B&amp;quot;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSLog(@&amp;quot;%ld&amp;quot;, [@&amp;quot;A&amp;quot;compare:@&amp;quot;A&amp;quot;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSLog(@&amp;quot;%ld&amp;quot;, [@&amp;quot;AA&amp;quot;compare:@&amp;quot;AB&amp;quot;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSLog(@&amp;quot;%ld&amp;quot;, [@&amp;quot;B&amp;quot;compare:@&amp;quot;A&amp;quot;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSLog(@&amp;quot;%ld&amp;quot;, [@&amp;quot;C&amp;quot;compare:@&amp;quot;A&amp;quot;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSLog(@&amp;quot;%d&amp;quot;, [str1isEqualToString:str2]);//相等为1,不等为0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; // 10. 字符串和数值类型转换&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; // 10.1 字符串转数值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; NSLog(@&amp;quot;%d&amp;quot;, [[NSStringstringWithFormat:@&amp;quot;123&amp;quot;]intValue]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; // 10.2 数值转字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; NSLog(@&amp;quot;%@&amp;quot;,  [NSStringstringWithFormat:@&amp;quot;%d&amp;quot;,234]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; // 11. 大小写转换操作&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSString *string = [NSStringstringWithFormat:@&amp;quot;hsdfasfASDF&amp;quot;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSLog(@&amp;quot;%@&amp;quot;, [stringuppercaseString]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSLog(@&amp;quot;%@&amp;quot;, [stringlowercaseString]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSLog(@&amp;quot;%@&amp;quot;, [stringcapitalizedString]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; /* NSMutableString 可变字符串 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; NSMutableString *mString1 = [NSMutableStringstringWithFormat:@&amp;quot;这是第%d个可变字符串&amp;quot;,1];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; // 1.拼接字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSString *st1 = [[NSStringalloc]initWithFormat:@&amp;quot;str1&amp;quot;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSString *st2 = [str1stringByAppendingString:@&amp;quot;str2&amp;quot;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSLog(@&amp;quot;%p\n%@&amp;quot;, st1, st2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSLog(@&amp;quot;%p&amp;quot;, st2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSLog(@&amp;quot;%p&amp;quot;, mString1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [mString1appendString:@&amp;quot;str3&amp;quot;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSLog(@&amp;quot;%p&amp;quot;, mString1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSLog(@&amp;quot;%@&amp;quot;, mString1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; // 2.插入字符&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [mString1insertString:@&amp;quot;aaaa&amp;quot;atIndex:2];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSLog(@&amp;quot;%@&amp;quot;, mString1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; // 3.删除字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [mString1 deleteCharactersInRange:NSMakeRange(2,2)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSLog(@&amp;quot;%@&amp;quot;, mString1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; // 4.替换字符&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [mString1 replaceCharactersInRange:NSMakeRange(2,2)withString:@&amp;quot;我们写的&amp;quot;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSLog(@&amp;quot;%@&amp;quot;, mString1);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; ///字符串基本操作&lt;/span&gt;&lt;br&gt;&lt;spa
    
    </summary>
    
    
      <category term="NSString" scheme="http://yoursite.com/tags/NSString/"/>
    
  </entry>
  
  <entry>
    <title>成员变量可见度与方法-定义分数(Fraction)类</title>
    <link href="http://yoursite.com/2014/08/09/%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F%E5%8F%AF%E8%A7%81%E5%BA%A6%E4%B8%8E%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/2014/08/09/成员变量可见度与方法/</id>
    <published>2014-08-09T10:16:39.000Z</published>
    <updated>2016-06-30T10:38:02.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;定义分数（Fraction）类：&quot;&gt;&lt;a href=&quot;#定义分数（Fraction）类：&quot; class=&quot;headerlink&quot; title=&quot;定义分数（Fraction）类：&quot;&gt;&lt;/a&gt;定义分数（Fraction）类：&lt;/h1&gt;&lt;h3 id=&quot;成员变量：分子、分母&quot;&gt;&lt;a href=&quot;#成员变量：分子、分母&quot; class=&quot;headerlink&quot; title=&quot;成员变量：分子、分母&quot;&gt;&lt;/a&gt;成员变量：分子、分母&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#import &amp;lt;Foundation/Foundation.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@interface Fraction :NSObject&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   NSInteger _numerator;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   NSInteger _denominator;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// 自定义初始化方法（初始分子和分母）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (id)initWithNumerator:(NSInteger)numerator denominator:(NSInteger)demoinator;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// 分子的赋值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)setNumerator:(NSInteger)numerator;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// 分母的赋值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)setDenominator:(NSInteger)denominator;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// 分子的取值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (NSInteger)getNumerator;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// 分子的赋值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (NSInteger)getDenominator;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// 打印分数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)outputFraction;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;///约分&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)outputReduceNumerator;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 计算(加、减、乘、除运算方法，返回分数对象。)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (Fraction *)calculate:(Fraction *)f type:(NSString *)type;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@end&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;实现方法&quot;&gt;&lt;a href=&quot;#实现方法&quot; class=&quot;headerlink&quot; title=&quot;实现方法&quot;&gt;&lt;/a&gt;实现方法&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@implementation Fraction&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// 自定义初始化&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (id)initWithNumerator:(NSInteger)numerator denominator:(NSInteger)demoinator&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   _numerator = numerator;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   _denominator = demoinator;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return self;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// 分子的赋值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)setNumerator:(NSInteger)numerator&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   _numerator = numerator;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// 分母的赋值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)setDenominator:(NSInteger)denominator&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   _denominator = denominator;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;///  分子的取值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (NSInteger)getNumerator&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return_numerator;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;///  分母的取值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (NSInteger)getDenominator&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return_denominator;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;///  打印分数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)outputFraction&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSLog(@&amp;quot;分数为:%ld/%ld&amp;quot;,_numerator, _denominator);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// 约分&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)outputReduceNumerator&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   NSInteger temp1 = 0, temp2 = 0, temp3 = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    temp1 =_numerator;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    temp2 =_denominator;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    while (_denominator !=0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        temp3 = _numerator %_denominator;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        _numerator =_denominator;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       _denominator = temp3;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   NSLog(@&amp;quot;约分后分数为%ld/%ld&amp;quot;, temp1/_numerator,temp2/_numerator);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// 计算&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (Fraction *)calculate:(Fraction *)f type:(NSString *)type;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Fraction *result = [[Fraction alloc]init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   if ([type isEqualTo:@&amp;quot;+&amp;quot;]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        result-&amp;gt;_numerator = f-&amp;gt;_numerator *_denominator + f-&amp;gt;_denominator *_numerator;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        result-&amp;gt;_denominator = f-&amp;gt;_denominator *_denominator;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [result outputReduceNumerator];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   if ([type isEqualTo:@&amp;quot;-&amp;quot;]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        result-&amp;gt;_numerator = f-&amp;gt;_numerator *_denominator - f-&amp;gt;_denominator *_numerator;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        result-&amp;gt;_denominator = f-&amp;gt;_denominator *_denominator;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [result outputReduceNumerator];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   if ([type isEqualTo:@&amp;quot;*&amp;quot;]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        result-&amp;gt;_numerator = f-&amp;gt;_numerator *_numerator;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        result-&amp;gt;_denominator = f-&amp;gt;_denominator *_denominator;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [result outputReduceNumerator];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   if ([type isEqualTo:@&amp;quot;/&amp;quot;]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        result-&amp;gt;_numerator = f-&amp;gt;_denominator*_numerator;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        result-&amp;gt;_denominator = f-&amp;gt;_numerator *_denominator;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [result outputReduceNumerator];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   return result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@end&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;mian-m文件中创建分数对象，测试加、减、乘、除。&quot;&gt;&lt;a href=&quot;#mian-m文件中创建分数对象，测试加、减、乘、除。&quot; class=&quot;headerlink&quot; title=&quot;mian.m文件中创建分数对象，测试加、减、乘、除。&quot;&gt;&lt;/a&gt;mian.m文件中创建分数对象，测试加、减、乘、除。&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#import &amp;lt;Foundation/Foundation.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#import &quot;Fraction.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int main(int argc,const char * argv[])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @autoreleasepool &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Fraction *f1 = [[Fraction alloc]initWithNumerator:1denominator:2];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [f1outputFraction];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [f1&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;Numerator:6];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [f1&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;Denominator:9];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [f1 outputReduceNumerator];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Fraction *f2 = [[Fraction alloc]initWithNumerator:1denominator:3];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Fraction *f3 = [[Fraction alloc]initWithNumerator:6denominator:5];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Fraction *f4 = [[Fraction alloc]initWithNumerator:4denominator:12];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Fraction *f5 = [[Fraction alloc]initWithNumerator:1denominator:8];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [f2calculate:f3 &lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt;:@&lt;span class=&quot;string&quot;&gt;&quot;*&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [f4calculate:f5 &lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt;:@&lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;定义分数（Fraction）类：&quot;&gt;&lt;a href=&quot;#定义分数（Fraction）类：&quot; class=&quot;headerlink&quot; title=&quot;定义分数（Fraction）类：&quot;&gt;&lt;/a&gt;定义分数（Fraction）类：&lt;/h1&gt;&lt;h3 id=&quot;成员变量：分子、分
    
    </summary>
    
    
      <category term="成员变量" scheme="http://yoursite.com/tags/%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F/"/>
    
      <category term="方法" scheme="http://yoursite.com/tags/%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
</feed>
